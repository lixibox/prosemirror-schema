{"version":3,"file":"index.es.js","sources":["../src/Placeholder.js","../src/utils.js","../src/rules/lists.js","../src/rules/links.js","../src/commands.js","../src/rules/blocks.js","../src/rules/hr.js","../src/keymap.js","../src/rules/marks.js","../src/prompt.js","../src/Field.js","../src/TextField.js","../src/menu/common.js","../src/icons.js","../src/menu/menuOptions.js","../src/schema/markdown/parser.js","../src/schema/markdown/messageParser.js","../src/schema/markdown/articleParser.js","../src/schema/markdown/serializer.js","../src/schema/markdown/articleSerializer.js","../src/schema/markdown/messageSerializer.js","../src/schema/article.js","../src/schema/message.js","../src/index.js"],"sourcesContent":["import { Plugin } from 'prosemirror-state';\nimport { Decoration, DecorationSet } from 'prosemirror-view';\n\nexport default (placeholderText = '') => {\n  return new Plugin({\n    props: {\n      decorations: state => {\n        const decorations = [];\n\n        const decorate = (node, pos) => {\n          if (state.doc.content.size === 2) {\n            decorations.push(\n              Decoration.node(pos, pos + node.nodeSize, {\n                class: 'empty-node',\n                'data-placeholder': placeholderText,\n              })\n            );\n          }\n        };\n\n        state.doc.descendants(decorate);\n\n        return DecorationSet.create(state.doc, decorations);\n      },\n    },\n  });\n};\n","import { InputRule } from 'prosemirror-inputrules';\nimport { Fragment, Slice } from 'prosemirror-model';\nimport { TextSelection } from 'prosemirror-state';\n\n/**\n * Determine if a mark (with specific attribute values) exists anywhere in the selection.\n */\nexport const markActive = (state, mark) => {\n  const { from, to, empty } = state.selection;\n  // When the selection is empty, only the active marks apply.\n  if (empty) {\n    return !!mark.isInSet(\n      state.tr.storedMarks || state.selection.$from.marks()\n    );\n  }\n  // For a non-collapsed selection, the marks on the nodes matter.\n  let found = false;\n  state.doc.nodesBetween(from, to, node => {\n    found = found || mark.isInSet(node.marks);\n  });\n  return found;\n};\n\nexport const hasCode = (state, pos) => {\n  const { code } = state.schema.marks;\n  const node = pos >= 0 && state.doc.nodeAt(pos);\n  if (node) {\n    return !!node.marks.filter(mark => mark.type === code).length;\n  }\n\n  return false;\n};\n\nconst hasUnsupportedMarkForBlockInputRule = (state, start, end) => {\n  const {\n    doc,\n    schema: { marks },\n  } = state;\n  let unsupportedMarksPresent = false;\n  const isUnsupportedMark = node =>\n    node.type === marks.code || node.type === marks.link;\n  doc.nodesBetween(start, end, node => {\n    unsupportedMarksPresent =\n      unsupportedMarksPresent ||\n      node.marks.filter(isUnsupportedMark).length > 0;\n  });\n  return unsupportedMarksPresent;\n};\n\nconst hasUnsupportedMarkForInputRule = (state, start, end) => {\n  const {\n    doc,\n    schema: { marks },\n  } = state;\n  let unsupportedMarksPresent = false;\n  const isCodemark = mark => mark.type === marks.code;\n  doc.nodesBetween(start, end, node => {\n    unsupportedMarksPresent =\n      unsupportedMarksPresent || node.marks.filter(isCodemark).length > 0;\n  });\n  return unsupportedMarksPresent;\n};\n\nexport function defaultInputRuleHandler(inputRule, isBlockNodeRule = false) {\n  const originalHandler = inputRule.handler;\n  inputRule.handler = (state, match, start, end) => {\n    // Skip any input rule inside code\n    // https://product-fabric.atlassian.net/wiki/spaces/E/pages/37945345/Editor+content+feature+rules#Editorcontent/featurerules-Rawtextblocks\n    const unsupportedMarks = isBlockNodeRule\n      ? hasUnsupportedMarkForBlockInputRule(state, start, end)\n      : hasUnsupportedMarkForInputRule(state, start, end);\n    if (state.selection.$from.parent.type.spec.code || unsupportedMarks) {\n      return;\n    }\n    return originalHandler(state, match, start, end);\n  };\n  return inputRule;\n}\n\nexport const createInputRule = (match, handler, isBlockNodeRule = false) =>\n  defaultInputRuleHandler(new InputRule(match, handler), isBlockNodeRule);\n\n// ProseMirror uses the Unicode Character 'OBJECT REPLACEMENT CHARACTER' (U+FFFC) as text representation for\n// leaf nodes, i.e. nodes that don't have any content or text property (e.g. hardBreak, emoji, mention, rule)\n// It was introduced because of https://github.com/ProseMirror/prosemirror/issues/262\n// This can be used in an input rule regex to be able to include or exclude such nodes.\nexport const leafNodeReplacementCharacter = '\\ufffc';\n\n/**\n * Returns false if node contains only empty inline nodes and hardBreaks.\n */\nexport function hasVisibleContent(node) {\n  const isInlineNodeHasVisibleContent = inlineNode => {\n    return inlineNode.isText\n      ? !!inlineNode.textContent.trim()\n      : inlineNode.type.name !== 'hardBreak';\n  };\n\n  if (node.isInline) {\n    return isInlineNodeHasVisibleContent(node);\n  } else if (node.isBlock && (node.isLeaf || node.isAtom)) {\n    return true;\n  } else if (!node.childCount) {\n    return false;\n  }\n\n  for (let index = 0; index < node.childCount; index++) {\n    const child = node.child(index);\n\n    if (hasVisibleContent(child)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n/**\n * Checks if node is an empty paragraph.\n */\nexport function isEmptyParagraph(node) {\n  return (\n    !node ||\n    (node.type.name === 'paragraph' && !node.textContent && !node.childCount)\n  );\n}\n\n/**\n * Checks if a node has any content. Ignores node that only contain empty block nodes.\n */\nexport function isNodeEmpty(node) {\n  if (node && node.textContent) {\n    return false;\n  }\n\n  if (\n    !node ||\n    !node.childCount ||\n    (node.childCount === 1 && isEmptyParagraph(node.firstChild))\n  ) {\n    return true;\n  }\n\n  const block = [];\n  const nonBlock = [];\n\n  node.forEach(child => {\n    child.isInline ? nonBlock.push(child) : block.push(child);\n  });\n\n  return (\n    !nonBlock.length &&\n    !block.filter(\n      childNode =>\n        (!!childNode.childCount &&\n          !(\n            childNode.childCount === 1 && isEmptyParagraph(childNode.firstChild)\n          )) ||\n        childNode.isAtom\n    ).length\n  );\n}\n\nexport const compose =\n  (...functions) =>\n  args =>\n    functions.reduceRight((arg, fn) => fn(arg), args);\n\n/**\n * A helper to get the underlying array of a fragment.\n */\nexport function getFragmentBackingArray(fragment) {\n  return fragment.content;\n}\n\nexport function mapFragment(content, callback, parent) {\n  const children = [];\n  for (let i = 0, size = content.childCount; i < size; i++) {\n    const node = content.child(i);\n    const transformed = node.isLeaf\n      ? callback(node, parent, i)\n      : callback(\n          node.copy(mapFragment(node.content, callback, node)),\n          parent,\n          i\n        );\n    if (transformed) {\n      if (transformed) {\n        children.push(...getFragmentBackingArray(transformed));\n      } else if (Array.isArray(transformed)) {\n        children.push(...transformed);\n      } else {\n        children.push(transformed);\n      }\n    }\n  }\n  return Fragment.fromArray(children);\n}\n\nexport function mapSlice(slice, callback) {\n  const fragment = mapFragment(slice.content, callback);\n  return new Slice(fragment, slice.openStart, slice.openEnd);\n}\n\nexport function atTheEndOfDoc(state) {\n  const { selection, doc } = state;\n  return doc.nodeSize - selection.$to.pos - 2 === selection.$to.depth;\n}\n\nexport function canMoveDown(state) {\n  const { selection } = state;\n\n  if (selection instanceof TextSelection) {\n    if (!selection.empty) {\n      return true;\n    }\n  }\n\n  return !atTheEndOfDoc(state);\n}\n\nexport function atTheBeginningOfDoc(state) {\n  const { selection } = state;\n  return selection.$from.pos === selection.$from.depth;\n}\n\nexport function canMoveUp(state) {\n  const { selection } = state;\n\n  if (selection instanceof TextSelection) {\n    if (!selection.empty) {\n      return true;\n    }\n  }\n\n  return !atTheBeginningOfDoc(state);\n}\n","import { inputRules, wrappingInputRule } from 'prosemirror-inputrules';\nimport { Fragment, Slice } from 'prosemirror-model';\n\nimport {\n  createInputRule as defaultCreateInputRule,\n  leafNodeReplacementCharacter,\n  hasVisibleContent,\n  isNodeEmpty,\n  compose,\n} from '../utils';\n\nimport { hasParentNodeOfType } from 'prosemirror-utils';\n\nimport * as baseListCommand from 'prosemirror-schema-list';\n\nconst maxIndentation = 3;\n\nfunction createInputRule(regexp, nodeType) {\n  return wrappingInputRule(\n    regexp,\n    nodeType,\n    {},\n    (_, node) => node.type === nodeType\n  );\n}\n\nexport const insertList = (state, listType, listTypeName, start, end) => {\n  // To ensure that match is done after HardBreak.\n  const { hardBreak } = state.schema.nodes;\n  if (state.doc.resolve(start).nodeAfter.type !== hardBreak) {\n    return null;\n  }\n\n  // To ensure no nesting is done.\n  if (state.doc.resolve(start).depth > 1) {\n    return null;\n  }\n\n  // Split at the start of autoformatting and delete formatting characters.\n  let tr = state.tr.delete(start, end).split(start);\n\n  // If node has more content split at the end of autoformatting.\n  let currentNode = tr.doc.nodeAt(start + 1);\n  tr.doc.nodesBetween(start, start + currentNode.nodeSize, (node, pos) => {\n    if (node.type === hardBreak) {\n      tr = tr.split(pos + 1).delete(pos, pos + 1);\n    }\n  });\n\n  // Wrap content in list node\n  const { list_item } = state.schema.nodes;\n  const position = tr.doc.resolve(start + 2);\n  let range = position.blockRange(position);\n  tr = tr.wrap(range, [{ type: listType }, { type: list_item }]);\n  return tr;\n};\n\n/**\n * Create input rules for bullet list node\n *\n * @param {Schema} schema\n * @returns {InputRule[]}\n */\nfunction getBulletListInputRules(schema) {\n  const asteriskRule = createInputRule(\n    /^\\s*([\\*\\-]) $/,\n    schema.nodes['bullet_list']\n  );\n\n  const leafNodeAsteriskRule = defaultCreateInputRule(\n    new RegExp(`${leafNodeReplacementCharacter}\\\\s*([\\\\*\\\\-]) $`),\n    (state, _match, start, end) => {\n      return insertList(\n        state,\n        schema.nodes['bullet_list'],\n        'bullet',\n        start,\n        end\n      );\n    },\n    true\n  );\n\n  return [asteriskRule, leafNodeAsteriskRule];\n}\n\n/**\n * Create input rules for strong mark\n *\n * @param {Schema} schema\n * @returns {InputRule[]}\n */\nfunction getOrderedListInputRules(schema) {\n  // NOTE: There is a built in input rule for ordered lists in ProseMirror. However, that\n  // input rule will allow for a list to start at any given number, which isn't allowed in\n  // markdown (where a ordered list will always start on 1). This is a slightly modified\n  // version of that input rule.\n  const numberOneRule = createInputRule(\n    /^(1)[\\.\\)] $/,\n    schema.nodes['ordered_list']\n  );\n\n  const leafNodeNumberOneRule = defaultCreateInputRule(\n    new RegExp(`${leafNodeReplacementCharacter}(1)[\\\\.\\\\)] $`),\n    (state, _match, start, end) => {\n      return insertList(\n        state,\n        schema.nodes['ordered_list'],\n        'numbered',\n        start,\n        end\n      );\n    },\n    true\n  );\n\n  return [numberOneRule, leafNodeNumberOneRule];\n}\n\nexport function listInputRules(schema) {\n  const rules = [];\n  if (schema.nodes['bullet_list']) {\n    rules.push(...getBulletListInputRules(schema));\n  }\n\n  if (schema.nodes['ordered_list']) {\n    rules.push(...getOrderedListInputRules(schema));\n  }\n\n  if (rules.length !== 0) {\n    return inputRules({ rules });\n  }\n\n  return;\n}\n\nconst isInsideListItem = state => {\n  const { $from } = state.selection;\n  const { list_item, paragraph } = state.schema.nodes;\n\n  return (\n    hasParentNodeOfType(list_item)(state.selection) &&\n    $from.parent.type === paragraph\n  );\n};\n\n// Returns the number of nested lists that are ancestors of the given selection\nexport const numberNestedLists = (resolvedPos, nodes) => {\n  const { bullet_list, ordered_list } = nodes;\n  let count = 0;\n  for (let i = resolvedPos.depth - 1; i > 0; i--) {\n    const node = resolvedPos.node(i);\n    if (node.type === bullet_list || node.type === ordered_list) {\n      count += 1;\n    }\n  }\n  return count;\n};\n\n/**\n * Merge closest bullet list blocks into one\n *\n * @param {NodeType} listItem\n * @param {NodeRange} range\n * @returns\n */\nfunction mergeLists(listItem, range) {\n  return command => {\n    return (state, dispatch) =>\n      command(state, tr => {\n        const $start = state.doc.resolve(range.start);\n        const $end = state.doc.resolve(range.end);\n        const $join = tr.doc.resolve(tr.mapping.map(range.end - 1));\n\n        if (\n          $join.nodeBefore &&\n          $join.nodeAfter &&\n          $join.nodeBefore.type === $join.nodeAfter.type\n        ) {\n          if (\n            $end.nodeAfter &&\n            $end.nodeAfter.type === listItem &&\n            $end.parent.type === $start.parent.type\n          ) {\n            tr.join($join.pos);\n          }\n        }\n\n        if (dispatch) {\n          dispatch(tr.scrollIntoView());\n        }\n      });\n  };\n}\n\nexport function outdentList() {\n  return function (state, dispatch) {\n    const { list_item } = state.schema.nodes;\n    const { $from, $to } = state.selection;\n    if (isInsideListItem(state)) {\n      let range = $from.blockRange(\n        $to,\n        node => node.childCount > 0 && node.firstChild.type === list_item\n      );\n\n      if (!range) {\n        return false;\n      }\n      return compose(\n        mergeLists(list_item, range), // 2. Check if I need to merge nearest list\n        baseListCommand.liftListItem // 1. First lift list item\n      )(list_item)(state, dispatch);\n    }\n\n    return false;\n  };\n}\n\nexport function splitListItem(itemType) {\n  return function (state, dispatch) {\n    const ref = state.selection;\n    const $from = ref.$from;\n    const $to = ref.$to;\n    const node = ref.node;\n    if ((node && node.isBlock) || $from.depth < 2 || !$from.sameParent($to)) {\n      return false;\n    }\n    const grandParent = $from.node(-1);\n    if (grandParent.type !== itemType) {\n      return false;\n    }\n    if (\n      grandParent.content.content.length <= 1 &&\n      $from.parent.content.size === 0 &&\n      !(grandParent.content.size === 0)\n    ) {\n      // In an empty block. If this is a nested list, the wrapping\n      // list item should be split. Otherwise, bail out and let next\n      // command handle lifting.\n      if (\n        $from.depth === 2 ||\n        $from.node(-3).type !== itemType ||\n        $from.index(-2) !== $from.node(-2).childCount - 1\n      ) {\n        return false;\n      }\n      if (dispatch) {\n        let wrap = Fragment.empty;\n        const keepItem = $from.index(-1) > 0;\n        // Build a fragment containing empty versions of the structure\n        // from the outer list item to the parent node of the cursor\n        for (\n          let d = $from.depth - (keepItem ? 1 : 2);\n          d >= $from.depth - 3;\n          d--\n        ) {\n          wrap = Fragment.from($from.node(d).copy(wrap));\n        }\n        // Add a second list item with an empty default start node\n        wrap = wrap.append(Fragment.from(itemType.createAndFill()));\n        const tr$1 = state.tr.replace(\n          $from.before(keepItem ? undefined : -1),\n          $from.after(-3),\n          new Slice(wrap, keepItem ? 3 : 2, 2)\n        );\n        tr$1.setSelection(\n          state.selection.constructor.near(\n            tr$1.doc.resolve($from.pos + (keepItem ? 3 : 2))\n          )\n        );\n        dispatch(tr$1.scrollIntoView());\n      }\n      return true;\n    }\n    const nextType =\n      $to.pos === $from.end()\n        ? grandParent.contentMatchAt(0).defaultType\n        : undefined;\n    const tr = state.tr.delete($from.pos, $to.pos);\n    const types = nextType && [undefined, { type: nextType }];\n\n    if (dispatch) {\n      dispatch(tr.split($from.pos, 2, types).scrollIntoView());\n    }\n    return true;\n  };\n}\n\nexport const enterKeyOnListCommand = (state, dispatch) => {\n  const { selection } = state;\n  if (selection.empty) {\n    const { $from } = selection;\n    const { list_item } = state.schema.nodes;\n    const node = $from.node($from.depth);\n    const wrapper = $from.node($from.depth - 1);\n\n    if (wrapper && wrapper.type === list_item) {\n      /** Check if the wrapper has any visible content */\n      const wrapperHasContent = hasVisibleContent(wrapper);\n      if (isNodeEmpty(node) && !wrapperHasContent) {\n        return outdentList()(state, dispatch);\n      } else {\n        return splitListItem(list_item)(state, dispatch);\n      }\n    }\n  }\n  return false;\n};\n\n/**\n * Check if we can sink the list.\n *\n * @param {number} initialIndentationLevel\n * @param {EditorState} state\n * @returns {boolean} - true if we can sink the list\n *                    - false if we reach the max indentation level\n */\nfunction canSink(initialIndentationLevel, state) {\n  /*\n  - Keep going forward in document until indentation of the node is < than the initial\n  - If indentation is EVER > max indentation, return true and don't sink the list\n  */\n  let currentIndentationLevel;\n  let currentPos = state.tr.selection.$to.pos;\n  do {\n    const resolvedPos = state.doc.resolve(currentPos);\n    currentIndentationLevel = numberNestedLists(\n      resolvedPos,\n      state.schema.nodes\n    );\n    if (currentIndentationLevel > maxIndentation) {\n      // Cancel sink list.\n      // If current indentation less than the initial, it won't be\n      // larger than the max, and the loop will terminate at end of this iteration\n      return false;\n    }\n    currentPos++;\n  } while (currentIndentationLevel >= initialIndentationLevel);\n\n  return true;\n}\n\nexport function indentList() {\n  return function (state, dispatch) {\n    const { list_item } = state.schema.nodes;\n    if (isInsideListItem(state)) {\n      // Record initial list indentation\n      const initialIndentationLevel = numberNestedLists(\n        state.selection.$from,\n        state.schema.nodes\n      );\n      if (canSink(initialIndentationLevel, state)) {\n        baseListCommand.sinkListItem(list_item)(state, dispatch);\n      }\n      return true;\n    }\n    return false;\n  };\n}\n","import { inputRules } from 'prosemirror-inputrules';\nimport { createInputRule } from '../utils';\nimport LinkifyIt from 'linkify-it';\n\n// This is a copy of the linkify-it regex, passing `undefined` for the schema\n// will use the default regex.\nconst linkify = new LinkifyIt(undefined, { fuzzyLink: false });\nlinkify.add('sourcetree:', 'http:');\n\nconst tlds =\n  'app|biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф'.split(\n    '|'\n  );\nconst tlds2Char =\n  'a[cdefgilmnoqrtuwxz]|b[abdefghijmnorstvwyz]|c[acdfghiklmnoruvwxyz]|d[ejkmoz]|e[cegrstu]|f[ijkmor]|g[abdefghilmnpqrstuwy]|h[kmnrtu]|i[delmnoqrst]|j[emop]|k[eghimnprwyz]|l[abcikrstuvy]|m[acdeghklmnopqrtuvwxyz]|n[acefgilopruz]|om|p[aefghkmnrtw]|qa|r[eosuw]|s[abcdegijklmnrtuvxyz]|t[cdfghjklmnortvwz]|u[agksyz]|v[aceginu]|w[fs]|y[et]|z[amw]';\ntlds.push(tlds2Char);\nlinkify.tlds(tlds, false);\n\nfunction createLinkInputRule(regexp) {\n  // Plain typed text (eg, typing 'www.google.com') should convert to a hyperlink\n  return createInputRule(regexp, (state, match, start, end) => {\n    const { schema } = state;\n    if (state.doc.rangeHasMark(start, end, schema.marks.link)) {\n      return null;\n    }\n    const [link] = match;\n\n    const url = normalizeUrl(link.url);\n    const markType = schema.mark('link', { href: url });\n\n    return state.tr\n      .addMark(\n        start - (link.input.length - link.lastIndex),\n        end - (link.input.length - link.lastIndex),\n        markType\n      )\n      .insertText(' ');\n  });\n}\n\nexport class LinkMatcher {\n  exec(str) {\n    if (str.endsWith(' ')) {\n      const chunks = str.slice(0, str.length - 1).split(' ');\n      const lastChunk = chunks[chunks.length - 1];\n      const links = linkify.match(lastChunk);\n      if (links && links.length > 0) {\n        const lastLink = links[links.length - 1];\n        lastLink.input = lastChunk;\n        lastLink.length = lastLink.lastIndex - lastLink.index + 1;\n        return [lastLink];\n      }\n    }\n    return null;\n  }\n}\n\nconst whitelistedURLPatterns = [\n  /^https?:\\/\\//im,\n  /^ftps?:\\/\\//im,\n  /^\\//im,\n  /^mailto:/im,\n  /^skype:/im,\n  /^callto:/im,\n  /^facetime:/im,\n  /^git:/im,\n  /^irc6?:/im,\n  /^news:/im,\n  /^nntp:/im,\n  /^feed:/im,\n  /^cvs:/im,\n  /^svn:/im,\n  /^mvn:/im,\n  /^ssh:/im,\n  /^scp:\\/\\//im,\n  /^sftp:\\/\\//im,\n  /^itms:/im,\n  /^notes:/im,\n  /^hipchat:\\/\\//im,\n  /^sourcetree:/im,\n  /^urn:/im,\n  /^tel:/im,\n  /^xmpp:/im,\n  /^telnet:/im,\n  /^vnc:/im,\n  /^rdp:/im,\n  /^whatsapp:/im,\n  /^slack:/im,\n  /^sips?:/im,\n  /^magnet:/im,\n];\n\nexport const isSafeUrl = url => {\n  return whitelistedURLPatterns.some(p => p.test(url.trim()) === true);\n};\n\nexport function getLinkMatch(str) {\n  const match = str && linkify.match(str);\n  return match && match[0];\n}\n\n/**\n * Adds protocol to url if needed.\n */\nexport function normalizeUrl(url) {\n  if (!url) {\n    return '';\n  }\n\n  if (isSafeUrl(url)) {\n    return url;\n  }\n  const match = getLinkMatch(url);\n  return (match && match.url) || '';\n}\n\nexport function linksInputRules(schema) {\n  if (!schema.marks.link) {\n    return;\n  }\n\n  const urlWithASpaceRule = createLinkInputRule(new LinkMatcher());\n\n  // [something](link) should convert to a hyperlink\n  const markdownLinkRule = createInputRule(\n    /(^|[^!])\\[(.*?)\\]\\((\\S+)\\)$/,\n    (state, match, start, end) => {\n      const { schema } = state;\n      const [, prefix, linkText, linkUrl] = match;\n      const url = normalizeUrl(linkUrl);\n      const markType = schema.mark('link', { href: url });\n\n      return state.tr.replaceWith(\n        start + prefix.length,\n        end,\n        schema.text(linkText, [markType])\n      );\n    }\n  );\n\n  return inputRules({\n    rules: [urlWithASpaceRule, markdownLinkRule],\n  });\n}\n","import { markActive, hasCode } from './utils';\nimport { hasParentNodeOfType } from 'prosemirror-utils';\nimport { Selection, TextSelection, NodeSelection } from 'prosemirror-state';\nimport { mapSlice, canMoveDown, canMoveUp } from './utils';\n\nexport const applyMarkOnRange = (from, to, removeMark, mark, tr) => {\n  // const { schema } = tr.doc.type;\n  // const { code } = schema.marks;\n  // if (mark.type === code) {\n  // // When turning to code we need to flat some special characters\n  // import { transformSmartCharsMentionsAndEmojis } from '../plugins/text-formatting/commands/transform-to-code';\n  //   transformSmartCharsMentionsAndEmojis(from, to, tr);\n  // }\n\n  tr.doc.nodesBetween(tr.mapping.map(from), tr.mapping.map(to), (node, pos) => {\n    if (!node.isText) {\n      return true;\n    }\n\n    // This is an issue when the user selects some text.\n    // We need to check if the current node position is less than the range selection from.\n    // If it’s true, that means we should apply the mark using the range selection,\n    // not the current node position.\n    const nodeBetweenFrom = Math.max(pos, tr.mapping.map(from));\n    const nodeBetweenTo = Math.min(pos + node.nodeSize, tr.mapping.map(to));\n\n    if (removeMark) {\n      tr.removeMark(nodeBetweenFrom, nodeBetweenTo, mark);\n    } else {\n      tr.addMark(nodeBetweenFrom, nodeBetweenTo, mark);\n    }\n\n    return true;\n  });\n\n  return tr;\n};\n\nexport const moveRight = () => {\n  return (state, dispatch) => {\n    const { code } = state.schema.marks;\n    const { empty, $cursor } = state.selection;\n    if (!empty || !$cursor) {\n      return false;\n    }\n    const { storedMarks } = state.tr;\n    if (code) {\n      const insideCode = markActive(state, code.create());\n      const currentPosHasCode = state.doc.rangeHasMark(\n        $cursor.pos,\n        $cursor.pos,\n        code\n      );\n      const nextPosHasCode = state.doc.rangeHasMark(\n        $cursor.pos,\n        $cursor.pos + 1,\n        code\n      );\n\n      const exitingCode =\n        !currentPosHasCode &&\n        !nextPosHasCode &&\n        (!storedMarks || !!storedMarks.length);\n      const enteringCode =\n        !currentPosHasCode &&\n        nextPosHasCode &&\n        (!storedMarks || !storedMarks.length);\n\n      // entering code mark (from the left edge): don't move the cursor, just add the mark\n      if (!insideCode && enteringCode) {\n        if (dispatch) {\n          dispatch(state.tr.addStoredMark(code.create()));\n        }\n        return true;\n      }\n\n      // exiting code mark: don't move the cursor, just remove the mark\n      if (insideCode && exitingCode) {\n        if (dispatch) {\n          dispatch(state.tr.removeStoredMark(code));\n        }\n        return true;\n      }\n    }\n\n    return false;\n  };\n};\n\nexport const moveLeft = () => {\n  return (state, dispatch) => {\n    const { code } = state.schema.marks;\n    const { empty, $cursor } = state.selection;\n    if (!empty || !$cursor) {\n      return false;\n    }\n\n    const { storedMarks } = state.tr;\n    if (code) {\n      const insideCode = code && markActive(state, code.create());\n      const currentPosHasCode = hasCode(state, $cursor.pos);\n      const nextPosHasCode = hasCode(state, $cursor.pos - 1);\n      const nextNextPosHasCode = hasCode(state, $cursor.pos - 2);\n\n      const exitingCode =\n        currentPosHasCode && !nextPosHasCode && Array.isArray(storedMarks);\n      const atLeftEdge =\n        nextPosHasCode &&\n        !nextNextPosHasCode &&\n        (storedMarks === null ||\n          (Array.isArray(storedMarks) && !!storedMarks.length));\n      const atRightEdge =\n        ((exitingCode && Array.isArray(storedMarks) && !storedMarks.length) ||\n          (!exitingCode && storedMarks === null)) &&\n        !nextPosHasCode &&\n        nextNextPosHasCode;\n      const enteringCode =\n        !currentPosHasCode &&\n        nextPosHasCode &&\n        Array.isArray(storedMarks) &&\n        !storedMarks.length;\n\n      // at the right edge: remove code mark and move the cursor to the left\n      if (!insideCode && atRightEdge) {\n        const tr = state.tr.setSelection(\n          Selection.near(state.doc.resolve($cursor.pos - 1))\n        );\n\n        if (dispatch) {\n          dispatch(tr.removeStoredMark(code));\n        }\n        return true;\n      }\n\n      // entering code mark (from right edge): don't move the cursor, just add the mark\n      if (!insideCode && enteringCode) {\n        if (dispatch) {\n          dispatch(state.tr.addStoredMark(code.create()));\n        }\n        return true;\n      }\n\n      // at the left edge: add code mark and move the cursor to the left\n      if (insideCode && atLeftEdge) {\n        const tr = state.tr.setSelection(\n          Selection.near(state.doc.resolve($cursor.pos - 1))\n        );\n\n        if (dispatch) {\n          dispatch(tr.addStoredMark(code.create()));\n        }\n        return true;\n      }\n\n      // exiting code mark (or at the beginning of the line): don't move the cursor, just remove the mark\n      const isFirstChild = $cursor.index($cursor.depth - 1) === 0;\n      if (\n        insideCode &&\n        (exitingCode || (!$cursor.nodeBefore && isFirstChild))\n      ) {\n        if (dispatch) {\n          dispatch(state.tr.removeStoredMark(code));\n        }\n        return true;\n      }\n    }\n\n    return false;\n  };\n};\n\nexport const insertBlock = (state, nodeType, nodeName, start, end, attrs) => {\n  // To ensure that match is done after HardBreak.\n  const {\n    hard_break: hardBreak,\n    code_block: codeBlock,\n    list_item: listItem,\n  } = state.schema.nodes;\n  const $pos = state.doc.resolve(start);\n  if ($pos.nodeAfter.type !== hardBreak) {\n    return null;\n  }\n\n  // To ensure no nesting is done. (unless we're inserting a codeBlock inside lists)\n  if (\n    $pos.depth > 1 &&\n    !(nodeType === codeBlock && hasParentNodeOfType(listItem)(state.selection))\n  ) {\n    return null;\n  }\n\n  // Split at the start of autoformatting and delete formatting characters.\n  let tr = state.tr.delete(start, end).split(start);\n  let currentNode = tr.doc.nodeAt(start + 1);\n\n  // If node has more content split at the end of autoformatting.\n  let nodeHasMoreContent = false;\n  tr.doc.nodesBetween(start, start + currentNode.nodeSize, (node, pos) => {\n    if (!nodeHasMoreContent && node.type === hardBreak) {\n      nodeHasMoreContent = true;\n      tr = tr.split(pos + 1).delete(pos, pos + 1);\n    }\n  });\n  if (nodeHasMoreContent) {\n    currentNode = tr.doc.nodeAt(start + 1);\n  }\n\n  // Create new node and fill with content of current node.\n  const { blockquote, paragraph } = state.schema.nodes;\n  let content;\n  let depth;\n  if (nodeType === blockquote) {\n    depth = 3;\n    content = [paragraph.create({}, currentNode.content)];\n  } else {\n    depth = 2;\n    content = currentNode.content;\n  }\n  const newNode = nodeType.create(attrs, content);\n\n  // Add new node.\n  tr = tr\n    .setSelection(new NodeSelection(tr.doc.resolve(start + 1)))\n    .replaceSelectionWith(newNode)\n    .setSelection(new TextSelection(tr.doc.resolve(start + depth)));\n  return tr;\n};\n\nexport function transformToCodeBlockAction(state, attrs) {\n  if (!state.selection.empty) {\n    // Don't do anything, if there is something selected\n    return state.tr;\n  }\n\n  const codeBlock = state.schema.nodes.code_block;\n  const startOfCodeBlockText = state.selection.$from;\n  const parentPos = startOfCodeBlockText.before();\n  const end = startOfCodeBlockText.end();\n\n  const codeBlockSlice = mapSlice(\n    state.doc.slice(startOfCodeBlockText.pos, end),\n    node => {\n      if (node.type === state.schema.nodes.hard_break) {\n        return state.schema.text('\\n');\n      }\n\n      if (node.isText) {\n        return node.mark([]);\n      } else if (node.isInline) {\n        return node.attrs.text ? state.schema.text(node.attrs.text) : null;\n      } else {\n        return node.content.childCount ? node.content : null;\n      }\n    }\n  );\n\n  const tr = state.tr.replaceRange(\n    startOfCodeBlockText.pos,\n    end,\n    codeBlockSlice\n  );\n  // If our offset isnt at 3 (backticks) at the start of line, cater for content.\n  if (startOfCodeBlockText.parentOffset >= 3) {\n    return tr.split(startOfCodeBlockText.pos, undefined, [\n      { type: codeBlock, attrs },\n    ]);\n  }\n  // TODO: Check parent node for valid code block marks, ATM It's not necessary because code block doesn't have any valid mark.\n  const codeBlockMarks = [];\n  return tr.setNodeMarkup(parentPos, codeBlock, attrs, codeBlockMarks);\n}\n\nexport function isConvertableToCodeBlock(state) {\n  // Before a document is loaded, there is no selection.\n  if (!state.selection) {\n    return false;\n  }\n\n  const { $from } = state.selection;\n  const node = $from.parent;\n\n  if (!node.isTextblock || node.type === state.schema.nodes.code_block) {\n    return false;\n  }\n\n  const parentDepth = $from.depth - 1;\n  const parentNode = $from.node(parentDepth);\n  const index = $from.index(parentDepth);\n\n  return parentNode.canReplaceWith(\n    index,\n    index + 1,\n    state.schema.nodes.code_block\n  );\n}\n\nexport const cleanUpAtTheStartOfDocument = (state, dispatch) => {\n  const { $cursor } = state.selection;\n  if (\n    $cursor &&\n    !$cursor.nodeBefore &&\n    !$cursor.nodeAfter &&\n    $cursor.pos === 1\n  ) {\n    const { tr, schema } = state;\n    const { paragraph } = schema.nodes;\n    const { parent } = $cursor;\n\n    /**\n     * Use cases:\n     * 1. Change `heading` to `paragraph`\n     * 2. Remove block marks\n     *\n     * NOTE: We already know it's an empty doc so it's safe to use 0\n     */\n    tr.setNodeMarkup(0, paragraph, parent.attrs, []);\n    if (dispatch) {\n      dispatch(tr);\n    }\n    return true;\n  }\n  return false;\n};\n\nfunction canCreateParagraphNear(state) {\n  const {\n    selection: { $from },\n  } = state;\n  const node = $from.node($from.depth);\n  const insideCodeBlock = !!node && node.type === state.schema.nodes.code_block;\n  const isNodeSelection = state.selection instanceof NodeSelection;\n  return $from.depth > 1 || isNodeSelection || insideCodeBlock;\n}\n\nexport const createNewParagraphBelow = (state, dispatch) => {\n  const append = true;\n  if (!canMoveDown(state) && canCreateParagraphNear(state)) {\n    createParagraphNear(append)(state, dispatch);\n    return true;\n  }\n\n  return false;\n};\n\nexport const createNewParagraphAbove = (state, dispatch) => {\n  const append = false;\n  if (!canMoveUp(state) && canCreateParagraphNear(state)) {\n    createParagraphNear(append)(state, dispatch);\n    return true;\n  }\n\n  return false;\n};\n\nfunction topLevelNodeIsEmptyTextBlock(state) {\n  const topLevelNode = state.selection.$from.node(1);\n  return (\n    topLevelNode.isTextblock &&\n    topLevelNode.type !== state.schema.nodes.code_block &&\n    topLevelNode.nodeSize === 2\n  );\n}\n\nfunction getInsertPosFromTextBlock(state, append) {\n  const { $from, $to } = state.selection;\n  let pos;\n  if (!append) {\n    pos = $from.start(0);\n  } else {\n    pos = $to.end(0);\n  }\n  return pos;\n}\n\nfunction getInsertPosFromNonTextBlock(state, append) {\n  const { $from, $to } = state.selection;\n\n  let pos;\n  if (!append) {\n    // The start position is different with text block because it starts from 0\n    pos = $from.start($from.depth);\n    // The depth is different with text block because it starts from 0\n    pos = $from.depth > 0 ? pos - 1 : pos;\n  } else {\n    pos = $to.end($to.depth);\n    pos = $to.depth > 0 ? pos + 1 : pos;\n  }\n  return pos;\n}\n\nexport function createParagraphNear(append = true) {\n  return function (state, dispatch) {\n    const paragraph = state.schema.nodes.paragraph;\n\n    if (!paragraph) {\n      return false;\n    }\n\n    let insertPos;\n\n    if (state.selection instanceof TextSelection) {\n      if (topLevelNodeIsEmptyTextBlock(state)) {\n        return false;\n      }\n      insertPos = getInsertPosFromTextBlock(state, append);\n    } else {\n      insertPos = getInsertPosFromNonTextBlock(state, append);\n    }\n\n    const tr = state.tr.insert(insertPos, paragraph.createAndFill());\n    tr.setSelection(TextSelection.create(tr.doc, insertPos + 1));\n\n    if (dispatch) {\n      dispatch(tr);\n    }\n\n    return true;\n  };\n}\n","import {\n  textblockTypeInputRule,\n  wrappingInputRule,\n  inputRules,\n} from 'prosemirror-inputrules';\n\nimport { leafNodeReplacementCharacter } from '../utils';\nimport {\n  isConvertableToCodeBlock,\n  transformToCodeBlockAction,\n  insertBlock,\n} from '../commands';\nimport { safeInsert } from 'prosemirror-utils';\nimport { createInputRule, defaultInputRuleHandler } from '../utils';\n\nconst MAX_HEADING_LEVEL = 6;\n\nfunction getHeadingLevel(match) {\n  return {\n    level: match[1].length,\n  };\n}\n\nexport function headingRule(nodeType, maxLevel) {\n  return textblockTypeInputRule(\n    new RegExp('^(#{1,' + maxLevel + '})\\\\s$'),\n    nodeType,\n    getHeadingLevel\n  );\n}\n\nexport function blockQuoteRule(nodeType) {\n  return wrappingInputRule(/^\\s*>\\s$/, nodeType);\n}\n\nexport function codeBlockRule(nodeType) {\n  return textblockTypeInputRule(/^```$/, nodeType);\n}\n\n/**\n * Get heading rules\n *\n * @param {Schema} schema\n * @returns {}\n */\nfunction getHeadingRules(schema) {\n  // '# ' for h1, '## ' for h2 and etc\n  const hashRule = defaultInputRuleHandler(\n    headingRule(schema.nodes.heading, MAX_HEADING_LEVEL),\n    true\n  );\n\n  const leftNodeReplacementHashRule = createInputRule(\n    new RegExp(`${leafNodeReplacementCharacter}(#{1,6})\\\\s$`),\n    (state, match, start, end) => {\n      const level = match[1].length;\n      return insertBlock(\n        state,\n        schema.nodes.heading,\n        `heading${level}`,\n        start,\n        end,\n        { level }\n      );\n    },\n    true\n  );\n\n  return [hashRule, leftNodeReplacementHashRule];\n}\n\n/**\n * Get all block quote input rules\n *\n * @param {Schema} schema\n * @returns {}\n */\nfunction getBlockQuoteRules(schema) {\n  // '> ' for blockquote\n  const greatherThanRule = defaultInputRuleHandler(\n    blockQuoteRule(schema.nodes.blockquote),\n    true\n  );\n\n  const leftNodeReplacementGreatherRule = createInputRule(\n    new RegExp(`${leafNodeReplacementCharacter}\\\\s*>\\\\s$`),\n    (state, _match, start, end) => {\n      return insertBlock(\n        state,\n        schema.nodes.blockquote,\n        'blockquote',\n        start,\n        end\n      );\n    },\n    true\n  );\n\n  return [greatherThanRule, leftNodeReplacementGreatherRule];\n}\n\n/**\n * Get all code block input rules\n *\n * @param {Schema} schema\n * @returns {}\n */\nfunction getCodeBlockRules(schema) {\n  const threeTildeRule = createInputRule(\n    /((^`{3,})|(\\s`{3,}))(\\S*)$/,\n    (state, match, start, end) => {\n      const attributes = {};\n      if (match[4]) {\n        attributes.language = match[4];\n      }\n      const newStart = match[0][0] === ' ' ? start + 1 : start;\n      if (isConvertableToCodeBlock(state)) {\n        const tr = transformToCodeBlockAction(state, attributes)\n          // remove markdown decorator ```\n          .delete(newStart, end)\n          .scrollIntoView();\n        return tr;\n      }\n      let { tr } = state;\n      tr = tr.delete(newStart, end);\n      const codeBlock = state.schema.nodes.code_block.createChecked();\n      return safeInsert(codeBlock)(tr);\n    },\n    true\n  );\n\n  const leftNodeReplacementThreeTildeRule = createInputRule(\n    new RegExp(`((${leafNodeReplacementCharacter}\\`{3,})|(\\\\s\\`{3,}))(\\\\S*)$`),\n    (state, match, start, end) => {\n      const attributes = {};\n      if (match[4]) {\n        attributes.language = match[4];\n      }\n      let tr = insertBlock(\n        state,\n        schema.nodes.code_block,\n        'codeblock',\n        start,\n        end,\n        attributes\n      );\n      return tr;\n    },\n    true\n  );\n\n  return [threeTildeRule, leftNodeReplacementThreeTildeRule];\n}\n\nexport function blocksInputRule(schema) {\n  const rules = [];\n\n  if (schema.nodes.heading) {\n    rules.push(...getHeadingRules(schema));\n  }\n\n  if (schema.nodes.blockquote) {\n    rules.push(...getBlockQuoteRules(schema));\n  }\n\n  if (schema.nodes.code_block) {\n    rules.push(...getCodeBlockRules(schema));\n  }\n\n  if (rules.length !== 0) {\n    return inputRules({ rules });\n  }\n  return;\n}\n\nexport default blocksInputRule;\n","import { inputRules } from 'prosemirror-inputrules';\nimport { safeInsert } from 'prosemirror-utils';\nimport { createInputRule } from '../utils';\n\nfunction createHorizontalRuleInputRule(type) {\n  return createInputRule(\n    /^(?:---|___|\\*\\*\\*)\\s$/, // Ensures rule is triggered with space after \"---\", \"___\", or \"***\"\n    (state, match, start, end) => {\n      if (!match[0]) {\n        return null; // If no match found, return null\n      }\n\n      // Deletes the matched sequence including the space\n      let tr = state.tr.delete(start, end);\n      const hrPos = start; // Position where the horizontal rule should be inserted\n\n      // Insert the horizontal rule at the position\n      tr = safeInsert(type.create(), hrPos)(tr);\n\n      // Insert a paragraph node after the horizontal rule\n      tr = safeInsert(state.schema.nodes.paragraph.create(), tr.mapping.map(hrPos + 1))(tr);\n\n      return tr;\n    }\n  );\n}\n\nexport function hrInputRules(schema) {\n  if (!schema.nodes.horizontal_rule) {\n    // Ensures that horizontal_rule is part of the schema\n    return inputRules({\n      rules: [],\n    });\n  }\n\n  const hrRule = createHorizontalRuleInputRule(schema.nodes.horizontal_rule);\n\n  return inputRules({\n    rules: [hrRule],\n  });\n}\n\nexport default hrInputRules;\n","import {\n  moveRight,\n  moveLeft,\n  cleanUpAtTheStartOfDocument,\n  createNewParagraphBelow,\n  createNewParagraphAbove,\n} from './commands';\nimport {\n  enterKeyOnListCommand,\n  indentList,\n  outdentList,\n  splitListItem,\n} from './rules/lists';\n\nimport {\n  chainCommands,\n  toggleMark,\n  exitCode,\n  joinUp,\n  joinDown,\n  selectParentNode,\n  baseKeymap,\n  deleteSelection,\n  joinBackward,\n  selectNodeBackward,\n  newlineInCode,\n  createParagraphNear,\n  liftEmptyBlock,\n  splitBlock,\n} from 'prosemirror-commands';\n\nimport { undo, redo } from 'prosemirror-history';\nimport { undoInputRule } from 'prosemirror-inputrules';\nimport { keymap } from 'prosemirror-keymap';\n\nconst mac =\n  typeof navigator !== 'undefined' ? /Mac/.test(navigator.platform) : false;\n\nexport function baseKeyMaps(schema) {\n  let keys = baseKeymap;\n  function bind(key, cmd) {\n    keys[key] = cmd;\n  }\n\n  bind('Mod-z', chainCommands(undoInputRule, undo));\n  bind('Shift-Mod-z', redo);\n  const backspaceComands = chainCommands(\n    undoInputRule,\n    cleanUpAtTheStartOfDocument,\n    deleteSelection,\n    joinBackward,\n    selectNodeBackward\n  );\n  bind('Backspace', backspaceComands);\n  bind('Mod-Backspace', backspaceComands);\n\n  if (!mac) bind('Mod-y', redo);\n\n  bind('Alt-ArrowUp', joinUp);\n  bind('Alt-ArrowDown', joinDown);\n  bind('Escape', selectParentNode);\n  bind('ArrowLeft', moveLeft());\n  bind('ArrowRight', moveRight());\n  bind('ArrowDown', createNewParagraphBelow);\n  bind('ArrowUp', createNewParagraphAbove);\n\n  if (schema.marks.strong) {\n    bind('Mod-b', toggleMark(schema.marks.strong));\n    bind('Mod-B', toggleMark(schema.marks.strong));\n  }\n\n  if (schema.marks.em) {\n    bind('Mod-i', toggleMark(schema.marks.em));\n    bind('Mod-I', toggleMark(schema.marks.em));\n  }\n\n  if (schema.marks.superscript) {\n    bind('Shift-Mod-.', toggleMark(schema.marks.superscript));\n  }\n\n  if (schema.nodes.hard_break) {\n    let br = schema.nodes.hard_break,\n      cmd = chainCommands(exitCode, (state, dispatch) => {\n        dispatch(\n          state.tr\n            .insertText(` `)\n            .replaceSelectionWith(br.create())\n            .scrollIntoView()\n        );\n        return true;\n      });\n    bind('Mod-Enter', cmd);\n    bind('Shift-Enter', cmd);\n    if (mac) bind('Ctrl-Enter', cmd);\n  }\n  const modEnter = mac ? 'Mod-Enter' : 'Ctrl-Enter';\n\n  const enterCommands = [\n    newlineInCode,\n    createParagraphNear,\n    liftEmptyBlock,\n    splitBlock,\n  ];\n\n  if (schema.nodes.list_item) {\n    enterCommands.unshift(enterKeyOnListCommand);\n\n    // TODO: Remove hacky fix\n    // This needs to done only when the editor sends messages on Enter.\n    // Currently Mod+enter command is never reached as it is overridden at the editor\n    //  side with Cmd+Enter for sending messages.\n    // Fix this by using a different keymap or overriding existing keymap on condition.\n\n    enterCommands.unshift(splitListItem(schema.nodes.list_item));\n    bind('Tab', indentList());\n    bind('Shift-Tab', outdentList());\n  }\n\n  bind('Enter', chainCommands.apply(null, enterCommands));\n  bind(modEnter, chainCommands.apply(null, enterCommands));\n  return keymap(keys);\n}\n","import { inputRules, InputRule } from 'prosemirror-inputrules';\nimport { applyMarkOnRange } from '../commands';\nimport { createInputRule } from '../utils';\nimport { TextSelection } from 'prosemirror-state';\n\nconst validCombos = {\n  '**': ['_', '~~', '^'],\n  '*': ['__', '~~', '^'],\n  '^': ['*', '_'],\n  __: ['*', '~~', '^'],\n  _: ['**', '~~', '^'],\n  '~~': ['__', '_', '**', '*', '^'],\n};\n\nconst validRegex = (char, str) => {\n  for (let i = 0; i < validCombos[char].length; i++) {\n    const ch = validCombos[char][i];\n    if (ch === str) {\n      return true;\n    }\n    const matchLength = str.length - ch.length;\n    if (str.substr(matchLength, str.length) === ch) {\n      return validRegex(ch, str.substr(0, matchLength));\n    }\n  }\n  return false;\n};\n\nfunction addMark(markType, schema, charSize, char) {\n  return (state, match, start, end) => {\n    const [, prefix, textWithCombo] = match;\n    const to = end;\n    // in case of *string* pattern it matches the text from beginning of the paragraph,\n    // because we want ** to work for strong text\n    // that's why \"start\" argument is wrong and we need to calculate it ourselves\n    const from = textWithCombo ? start + prefix.length : start;\n    const nodeBefore = state.doc.resolve(start + prefix.length).nodeBefore;\n\n    if (\n      prefix &&\n      prefix.length > 0 &&\n      !validRegex(char, prefix) &&\n      !(nodeBefore && nodeBefore.type === state.schema.nodes.hard_break)\n    ) {\n      return null;\n    }\n    // fixes the following case: my `*name` is *\n    // expected result: should ignore special characters inside \"code\"\n    if (\n      state.schema.marks.code &&\n      state.schema.marks.code.isInSet(state.doc.resolve(from + 1).marks())\n    ) {\n      return null;\n    }\n\n    // Prevent autoformatting across hardbreaks\n    let containsHardBreak;\n    state.doc.nodesBetween(from, to, node => {\n      if (node.type === schema.nodes.hard_break) {\n        containsHardBreak = true;\n        return false;\n      }\n      return !containsHardBreak;\n    });\n    if (containsHardBreak) {\n      return null;\n    }\n\n    // fixes autoformatting in heading nodes: # Heading *bold*\n    // expected result: should not autoformat *bold*; <h1>Heading *bold*</h1>\n    if (state.doc.resolve(from).sameParent(state.doc.resolve(to))) {\n      if (!state.doc.resolve(from).parent.type.allowsMarkType(markType)) {\n        return null;\n      }\n    }\n\n    // apply mark to the range (from, to)\n    let tr = state.tr.addMark(from, to, markType.create());\n\n    if (charSize > 1) {\n      // delete special characters after the text\n      // Prosemirror removes the last symbol by itself, so we need to remove \"charSize - 1\" symbols\n      tr = tr.delete(to - (charSize - 1), to);\n    }\n\n    return (\n      tr\n        // delete special characters before the text\n        .delete(from, from + charSize)\n        .removeStoredMark(markType)\n    );\n  };\n}\n\nfunction addCodeMark(markType, specialChar) {\n  return (state, match, start, end) => {\n    if (match[1] && match[1].length > 0) {\n      const allowedPrefixConditions = [\n        prefix => {\n          return prefix === '(';\n        },\n        prefix => {\n          const nodeBefore = state.doc.resolve(\n            start + prefix.length\n          ).nodeBefore;\n          return (\n            (nodeBefore && nodeBefore.type === state.schema.nodes.hard_break) ||\n            false\n          );\n        },\n      ];\n\n      if (allowedPrefixConditions.every(condition => !condition(match[1]))) {\n        return null;\n      }\n    }\n    // fixes autoformatting in heading nodes: # Heading `bold`\n    // expected result: should not autoformat *bold*; <h1>Heading `bold`</h1>\n    if (state.doc.resolve(start).sameParent(state.doc.resolve(end))) {\n      if (!state.doc.resolve(start).parent.type.allowsMarkType(markType)) {\n        return null;\n      }\n    }\n\n    let tr = state.tr;\n    // checks if a selection exists and needs to be removed\n    if (state.selection.from !== state.selection.to) {\n      tr.delete(state.selection.from, state.selection.to);\n      end -= state.selection.to - state.selection.from;\n    }\n\n    const regexStart = end - match[2].length + 1;\n    const codeMark = state.schema.marks.code.create();\n    return applyMarkOnRange(regexStart, end, false, codeMark, tr)\n      .setStoredMarks([codeMark])\n      .delete(regexStart, regexStart + specialChar.length)\n      .removeStoredMark(markType);\n  };\n}\n\nexport const strongRegex1 =\n  /(\\S*)(\\_\\_([^\\_\\s](\\_(?!\\_)|[^\\_])*[^\\_\\s]|[^\\_\\s])\\_\\_)$/;\nexport const strongRegex2 =\n  /(\\S*)(\\*\\*([^\\*\\s](\\*(?!\\*)|[^\\*])*[^\\*\\s]|[^\\*\\s])\\*\\*)$/;\nexport const italicRegex1 =\n  /(\\S*[^\\s\\_]*)(\\_([^\\s\\_][^\\_]*[^\\s\\_]|[^\\s\\_])\\_)$/;\nexport const italicRegex2 =\n  /(\\S*[^\\s\\*]*)(\\*([^\\s\\*][^\\*]*[^\\s\\*]|[^\\s\\*])\\*)$/;\nexport const strikeRegex =\n  /(\\S*)(\\~\\~([^\\s\\~](\\~(?!\\~)|[^\\~])*[^\\s\\~]|[^\\s\\~])\\~\\~)$/;\nexport const codeRegex = /(\\S*)(`[^\\s][^`]*`)$/;\nexport const supertextRegex = /(\\S*[^\\s^]*)(\\^([^\\s^][^^]*[^\\s^]|[^\\s^])\\^)$/;\n\n/**\n * Create input rules for strong mark\n *\n * @param {Schema} schema\n * @returns {InputRule[]}\n */\nfunction getStrongInputRules(schema) {\n  // **string** or __strong__ should bold the text\n\n  const markLength = 2;\n  const doubleUnderscoreRule = createInputRule(\n    strongRegex1,\n    addMark(schema.marks.strong, schema, markLength, '__')\n  );\n\n  const doubleAsterixRule = createInputRule(\n    strongRegex2,\n    addMark(schema.marks.strong, schema, markLength, '**')\n  );\n\n  return [doubleUnderscoreRule, doubleAsterixRule];\n}\n\n/**\n * Create input rules for em mark\n *\n * @param {Schema} schema\n * @returns {InputRule[]}\n */\nfunction getItalicInputRules(schema) {\n  // *string* or _string_ should italic the text\n  const markLength = 1;\n\n  const underscoreRule = createInputRule(\n    italicRegex1,\n    addMark(schema.marks.em, schema, markLength, '_')\n  );\n\n  const asterixRule = createInputRule(\n    italicRegex2,\n    addMark(schema.marks.em, schema, markLength, '*')\n  );\n\n  return [underscoreRule, asterixRule];\n}\n\n/**\n * Create input rules for strike mark\n *\n * @param {Schema} schema\n * @returns {InputRule[]}\n */\nfunction getStrikeInputRules(schema) {\n  const markLength = 2;\n  const doubleTildeRule = createInputRule(\n    strikeRegex,\n    addMark(schema.marks.strike, schema, markLength, '~~')\n  );\n\n  return [doubleTildeRule];\n}\n\nfunction getSuperscriptInputRules(schema) {\n  const markLength = 1;\n  // const doubleTildeRule = addMark(schema.marks.superscript);\n  const doubleTildeRule = createInputRule(\n    supertextRegex,\n    addMark(schema.marks.superscript, schema, markLength, '^')\n  );\n\n  return [doubleTildeRule];\n}\n\n/**\n * Create input rules for code mark\n *\n * @param {Schema} schema\n * @returns {InputRule[]}\n */\nfunction getCodeInputRules(schema) {\n  const backTickRule = createInputRule(\n    codeRegex,\n    addCodeMark(schema.marks.code, '`')\n  );\n\n  return [backTickRule];\n}\n\nexport function textFormattingInputRules(schema) {\n  const rules = [];\n\n  if (schema.marks.strong) {\n    rules.push(...getStrongInputRules(schema));\n  }\n\n  if (schema.marks.em) {\n    rules.push(...getItalicInputRules(schema));\n  }\n\n  if (schema.marks.superscript) {\n    rules.push(...getSuperscriptInputRules(schema));\n  }\n\n  if (schema.marks.strike) {\n    rules.push(...getStrikeInputRules(schema));\n  }\n\n  if (schema.marks.code) {\n    rules.push(...getCodeInputRules(schema));\n  }\n\n  if (rules.length !== 0) {\n    return inputRules({ rules });\n  }\n  return;\n}\n\nexport default textFormattingInputRules;\n","/* eslint-disable no-plusplus */\nconst prefix = 'ProseMirror-prompt';\n\nfunction reportInvalid(dom, message) {\n  // FIXME this is awful and needs a lot more work\n  let parent = dom.parentNode;\n  let msg = parent.appendChild(document.createElement('div'));\n  msg.style.left = dom.offsetLeft + dom.offsetWidth + 2 + 'px';\n  msg.style.top = dom.offsetTop - 5 + 'px';\n  msg.className = 'ProseMirror-invalid';\n  msg.textContent = message;\n  setTimeout(() => parent.removeChild(msg), 1500);\n}\n\nfunction getValues(fields, domFields) {\n  let result = Object.keys(fields)\n    .filter((name, index) => {\n      let field = fields[name];\n      let dom = domFields[index];\n      let value = field.read(dom);\n      let bad = field.validate(value);\n\n      if (bad) reportInvalid(dom, bad);\n      return !bad;\n    })\n    .reduce((acc, name, index) => {\n      let field = fields[name];\n      let dom = domFields[index];\n      let value = field.read(dom);\n      acc[name] = field.clean(value);\n      return acc;\n    }, {});\n  return result;\n}\n\nexport function openPrompt(options) {\n  let wrapper = document.body.appendChild(document.createElement('div'));\n  wrapper.className = prefix;\n\n  const close = () => {\n    // eslint-disable-next-line no-use-before-define\n    window.removeEventListener('mousedown', mouseOutside);\n    if (wrapper.parentNode) wrapper.parentNode.removeChild(wrapper);\n  };\n\n  let mouseOutside = e => {\n    if (!wrapper.contains(e.target)) close();\n  };\n  setTimeout(() => window.addEventListener('mousedown', mouseOutside), 50);\n\n  let domFields = [];\n\n  Object.values(options.fields).map(field => domFields.push(field.render()));\n\n  let submitButton = document.createElement('button');\n  submitButton.type = 'submit';\n  submitButton.className =\n    'button tiny button--save-link ' + prefix + '-submit';\n  submitButton.textContent = 'Create Link';\n  let cancelButton = document.createElement('button');\n  cancelButton.type = 'button';\n  cancelButton.className = 'button tiny hollow secondary' + prefix + '-cancel';\n  cancelButton.textContent = 'Cancel';\n  cancelButton.addEventListener('click', close);\n\n  let form = wrapper.appendChild(document.createElement('form'));\n  if (options.title) {\n    const titleDom = document.createElement('h5');\n    titleDom.className = 'sub-block-title';\n    form.appendChild(titleDom).textContent = options.title;\n  }\n  domFields.forEach(field => {\n    form.appendChild(document.createElement('div')).appendChild(field);\n  });\n  let buttons = form.appendChild(document.createElement('div'));\n  buttons.className = prefix + '-buttons';\n  buttons.appendChild(submitButton);\n  buttons.appendChild(document.createTextNode(' '));\n  buttons.appendChild(cancelButton);\n\n  let box = wrapper.getBoundingClientRect();\n  wrapper.style.top = (window.innerHeight - box.height) / 2 + 'px';\n  wrapper.style.left = (window.innerWidth - box.width) / 2 + 'px';\n\n  let submit = () => {\n    let params = getValues(options.fields, domFields);\n    if (params) {\n      close();\n      options.callback(params);\n    }\n  };\n\n  form.addEventListener('submit', e => {\n    e.preventDefault();\n    submit();\n  });\n\n  form.addEventListener('keydown', e => {\n    if (e.key === 'Esc') {\n      e.preventDefault();\n      close();\n    } else if (e.key === 'Enter' && !(e.ctrlKey || e.metaKey || e.shiftKey)) {\n      e.preventDefault();\n      submit();\n    } else if (e.key === 'Tab') {\n      window.setTimeout(() => {\n        if (!wrapper.contains(document.activeElement)) close();\n      }, 500);\n    }\n  });\n\n  let input = form.elements[0];\n  if (input) input.focus();\n}\n","/* eslint-disable class-methods-use-this */\n// ::- The type of field that `FieldPrompt` expects to be passed to it.\nexport class Field {\n  // :: (Object)\n  // Create a field with the given options. Options support by all\n  // field types are:\n  //\n  // **`value`**`: ?any`\n  //   : The starting value for the field.\n  //\n  // **`label`**`: string`\n  //   : The label for the field.\n  //\n  // **`required`**`: ?bool`\n  //   : Whether the field is required.\n  //\n  // **`validate`**`: ?(any) → ?string`\n  //   : A function to validate the given value. Should return an\n  //     error message if it is not valid.\n  constructor(options) {\n    this.options = options;\n  }\n\n  // render:: (state: EditorState, props: Object) → dom.Node\n  // Render the field to the DOM. Should be implemented by all subclasses.\n\n  // :: (dom.Node) → any\n  // Read the field's value from its DOM node.\n  read(dom) {\n    return dom.value;\n  }\n\n  // :: (any) → ?string\n  // A field-type-specific validation function.\n  validateType() {}\n\n  validate(value) {\n    if (!value && this.options.required) return 'Required field';\n    return (\n      this.validateType(value) ||\n      (this.options.validate && this.options.validate(value))\n    );\n  }\n\n  clean(value) {\n    return this.options.clean ? this.options.clean(value) : value;\n  }\n}\n","import { Field } from './Field';\n\n// ::- A field class for single-line text fields.\nexport class TextField extends Field {\n  render() {\n    let input = document.createElement('input');\n    input.type = 'text';\n    input.placeholder = this.options.label;\n    input.className = this.options.class;\n    input.value = this.options.value || '';\n    input.autocomplete = 'off';\n    return input;\n  }\n}\n","import { MenuItem } from 'prosemirror-menu';\nimport { toggleMark, setBlockType } from 'prosemirror-commands';\nimport { markActive } from '../utils';\n\nexport const cmdItem = (cmd, options) => {\n  const passedOptions = {\n    label: options.title,\n    run: cmd,\n  };\n  Object.keys(options).reduce((acc, optionKey) => {\n    acc[optionKey] = options[optionKey];\n    return acc;\n  }, passedOptions);\n  if ((!options.enable || options.enable === true) && !options.select) {\n    passedOptions[options.enable ? 'enable' : 'select'] = (state) => cmd(state);\n  }\n\n  return new MenuItem(passedOptions);\n};\n\nexport const markItem = (markType, options) => {\n  const passedOptions = {\n    active(state) {\n      return markActive(state, markType);\n    },\n    enable: true,\n  };\n  Object.keys(options).reduce((acc, optionKey) => {\n    acc[optionKey] = options[optionKey];\n    return acc;\n  }, passedOptions);\n  return cmdItem(toggleMark(markType), passedOptions);\n};\n\nexport const blockTypeIsActive = (state, type, attrs) => {\n  const { $from } = state.selection;\n\n  let wrapperDepth;\n  let currentDepth = $from.depth;\n  while (currentDepth > 0) {\n    const currentNodeAtDepth = $from.node(currentDepth);\n\n    const comparisonAttrs = {\n      ...attrs,\n    };\n    if (currentNodeAtDepth.attrs.level) {\n      comparisonAttrs.level = currentNodeAtDepth.attrs.level;\n    }\n    const isType = type.name === currentNodeAtDepth.type.name;\n    const hasAttrs = Object.keys(attrs).reduce((prev, curr) => {\n      if (attrs[curr] !== currentNodeAtDepth.attrs[curr]) {\n        return false;\n      }\n      return prev;\n    }, true);\n\n    if (isType && hasAttrs) {\n      wrapperDepth = currentDepth;\n    }\n    currentDepth -= 1;\n  }\n\n  return wrapperDepth;\n};\n\nexport const toggleBlockType = (type, attrs) => (state, dispatch) => {\n  const isActive = blockTypeIsActive(state, type, attrs);\n  const newNodeType = isActive ? state.schema.nodes.paragraph : type;\n  const setBlockFunction = setBlockType(newNodeType, attrs);\n  return setBlockFunction(state, dispatch);\n};\n","const BaseIcon = {\n  width: 24,\n  height: 24,\n  viewBox: '0 0 24 24',\n  fill: 'none',\n  stroke: 'currentColor',\n  strokeWidth: 2,\n  strokeLinecap: 'round',\n  strokeLinejoin: 'round',\n  path: '',\n};\n\nconst icons = {\n  strong: {\n    ...BaseIcon,\n    path: 'M6.935 4.44A1.5 1.5 0 0 1 7.996 4h4.383C15.017 4 17 6.182 17 8.625a4.63 4.63 0 0 1-.865 2.682c1.077.827 1.866 2.12 1.866 3.813C18 18.232 15.3 20 13.12 20H8a1.5 1.5 0 0 1-1.5-1.5l-.004-13c0-.397.158-.779.44-1.06ZM9.5 10.25h2.88c.903 0 1.62-.76 1.62-1.625S13.281 7 12.38 7H9.498l.002 3.25Zm0 3V17h3.62c.874 0 1.88-.754 1.88-1.88 0-1.13-.974-1.87-1.88-1.87H9.5Z',\n  },\n  em: {\n    ...BaseIcon,\n    path: 'M9.75 4h8.504a.75.75 0 0 1 .102 1.493l-.102.006h-3.197L10.037 18.5h4.213a.75.75 0 0 1 .742.648l.007.102a.75.75 0 0 1-.648.743L14.25 20h-9.5a.747.747 0 0 1-.746-.75c0-.38.28-.694.645-.743l.101-.007h3.685l.021-.065L13.45 5.499h-3.7a.75.75 0 0 1-.742-.648L9 4.75a.75.75 0 0 1 .648-.743L9.751 4h8.503-8.503Z',\n  },\n  superScript: {\n    ...BaseIcon,\n    path: `M18.736 3.5c-.543 0-.986.495-.986 1.023a.75.75 0 0 1-1.5 0C16.25 3.278 17.258 2 18.736 2c.855 0 1.684.4 2.15 1.117.49.751.5 1.724-.057 2.672-.285.484-.673.847-1.045 1.141-.187.148-.379.284-.557.41l-.078.056a17.45 17.45 0 0 0-.432.311c-.356.268-.619.511-.78.793h2.514a.75.75 0 0 1 0 1.5H17a.75.75 0 0 1-.75-.75c0-1.396.821-2.182 1.565-2.741.157-.119.32-.234.472-.341l.074-.052c.177-.126.34-.243.493-.363.306-.242.532-.47.682-.724.31-.53.229-.886.093-1.094-.158-.244-.486-.435-.893-.435Z\n      M15.26 4.71c.06.562.385 1.043.847 1.318L10.987 12l5.583 6.512a.75.75 0 1 1-1.14.976L10 13.152l-5.43 6.336a.75.75 0 0 1-1.14-.976L9.013 12 3.431 5.488a.75.75 0 1 1 1.139-.976L10 10.848l5.26-6.137Z`,\n  },\n  code: {\n    ...BaseIcon,\n    path: 'm8.066 18.943 6.5-14.5a.75.75 0 0 1 1.404.518l-.036.096-6.5 14.5a.75.75 0 0 1-1.404-.518l.036-.096 6.5-14.5-6.5 14.5ZM2.22 11.47l4.25-4.25a.75.75 0 0 1 1.133.976l-.073.085L3.81 12l3.72 3.719a.75.75 0 0 1-.976 1.133l-.084-.073-4.25-4.25a.75.75 0 0 1-.073-.976l.073-.084 4.25-4.25-4.25 4.25Zm14.25-4.25a.75.75 0 0 1 .976-.073l.084.073 4.25 4.25a.75.75 0 0 1 .073.976l-.073.085-4.25 4.25a.75.75 0 0 1-1.133-.977l.073-.084L20.19 12l-3.72-3.72a.75.75 0 0 1 0-1.06Z',\n  },\n  link: {\n    ...BaseIcon,\n    path: 'M9.25 7a.75.75 0 0 1 .11 1.492l-.11.008H7a3.5 3.5 0 0 0-.206 6.994L7 15.5h2.25a.75.75 0 0 1 .11 1.492L9.25 17H7a5 5 0 0 1-.25-9.994L7 7h2.25ZM17 7a5 5 0 0 1 .25 9.994L17 17h-2.25a.75.75 0 0 1-.11-1.492l.11-.008H17a3.5 3.5 0 0 0 .206-6.994L17 8.5h-2.25a.75.75 0 0 1-.11-1.492L14.75 7H17ZM7 11.25h10a.75.75 0 0 1 .102 1.493L17 12.75H7a.75.75 0 0 1-.102-1.493L7 11.25h10H7Z',\n  },\n  undo: {\n    ...BaseIcon,\n    path: 'M4.75 2a.75.75 0 0 1 .743.648l.007.102v5.69l4.574-4.56a6.41 6.41 0 0 1 8.879-.179l.186.18a6.41 6.41 0 0 1 0 9.063l-8.846 8.84a.75.75 0 0 1-1.06-1.062l8.845-8.838a4.91 4.91 0 0 0-6.766-7.112l-.178.17L6.562 9.5h5.688a.75.75 0 0 1 .743.648l.007.102a.75.75 0 0 1-.648.743L12.25 11h-7.5a.75.75 0 0 1-.743-.648L4 10.25v-7.5A.75.75 0 0 1 4.75 2Z',\n  },\n  redo: {\n    ...BaseIcon,\n    path: 'M19.25 2a.75.75 0 0 0-.743.648l-.007.102v5.69l-4.574-4.56a6.41 6.41 0 0 0-8.878-.179l-.186.18a6.41 6.41 0 0 0 0 9.063l8.845 8.84a.75.75 0 0 0 1.06-1.062l-8.845-8.838a4.91 4.91 0 0 1 6.766-7.112l.178.17L17.438 9.5H11.75a.75.75 0 0 0-.743.648L11 10.25c0 .38.282.694.648.743l.102.007h7.5a.75.75 0 0 0 .743-.648L20 10.25v-7.5a.75.75 0 0 0-.75-.75Z',\n  },\n  bulletList: {\n    ...BaseIcon,\n    path: 'M3.25 17.5a1.25 1.25 0 1 1 0 2.5 1.25 1.25 0 0 1 0-2.5Zm3.5.5h14.5a.75.75 0 0 1 .102 1.494l-.102.006H6.75a.75.75 0 0 1-.102-1.493L6.75 18h14.5-14.5Zm-3.5-7a1.25 1.25 0 1 1 0 2.5 1.25 1.25 0 0 1 0-2.5Zm3.5.5h14.5a.75.75 0 0 1 .102 1.494L21.25 13H6.75a.75.75 0 0 1-.102-1.493l.102-.007h14.5-14.5Zm-3.5-7A1.25 1.25 0 1 1 3.25 7a1.25 1.25 0 0 1 0-2.499Zm3.5.5h14.5a.75.75 0 0 1 .102 1.494l-.102.006H6.75a.75.75 0 0 1-.102-1.493L6.75 5h14.5-14.5Z',\n  },\n  orderedList: {\n    ...BaseIcon,\n    path: 'M6 2.75a.75.75 0 0 0-1.434-.307l-.002.003a1.45 1.45 0 0 1-.067.132 4.126 4.126 0 0 1-.238.384c-.217.313-.524.663-.906.902a.75.75 0 1 0 .794 1.272c.125-.078.243-.161.353-.248V7.25a.75.75 0 0 0 1.5 0v-4.5ZM20.5 18.75a.75.75 0 0 0-.75-.75h-9a.75.75 0 0 0 0 1.5h9a.75.75 0 0 0 .75-.75ZM20.5 12.244a.75.75 0 0 0-.75-.75h-9a.75.75 0 1 0 0 1.5h9a.75.75 0 0 0 .75-.75ZM20.5 5.75a.75.75 0 0 0-.75-.75h-9a.75.75 0 0 0 0 1.5h9a.75.75 0 0 0 .75-.75ZM5.15 10.52c-.3-.053-.676.066-.87.26a.75.75 0 1 1-1.06-1.06c.556-.556 1.43-.812 2.192-.677.397.07.805.254 1.115.605.316.358.473.825.473 1.352 0 .62-.271 1.08-.606 1.42-.278.283-.63.511-.906.689l-.08.051a5.88 5.88 0 0 0-.481.34H6.25a.75.75 0 0 1 0 1.5h-2.5a.75.75 0 0 1-.75-.75c0-1.314.984-1.953 1.575-2.337l.06-.04c.318-.205.533-.345.69-.504.134-.136.175-.238.175-.369 0-.223-.061-.318-.098-.36a.42.42 0 0 0-.251-.12ZM2.97 21.28s.093.084.004.005l.006.005.013.013a1.426 1.426 0 0 0 .15.125c.095.07.227.158.397.243.341.17.83.329 1.46.329.64 0 1.196-.181 1.601-.54.408-.36.61-.857.595-1.359A1.775 1.775 0 0 0 6.77 19c.259-.305.412-.685.426-1.101a1.73 1.73 0 0 0-.595-1.36C6.196 16.181 5.64 16 5 16c-.63 0-1.119.158-1.46.33a2.592 2.592 0 0 0-.51.334 1.426 1.426 0 0 0-.037.033l-.013.013-.006.005-.002.003H2.97l-.001.002a.75.75 0 0 0 1.048 1.072 1.1 1.1 0 0 1 .192-.121c.159-.08.42-.171.79-.171.36 0 .536.1.608.164.07.061.09.127.088.187a.325.325 0 0 1-.123.23c-.089.077-.263.169-.573.169a.75.75 0 0 0 0 1.5c.31 0 .484.092.573.168.091.08.121.166.123.231a.232.232 0 0 1-.088.187c-.072.064-.247.164-.608.164a1.75 1.75 0 0 1-.79-.17 1.1 1.1 0 0 1-.192-.122.75.75 0 0 0-1.048 1.072Zm.002-4.563-.001.002c.007-.006.2-.168 0-.002Z',\n  },\n  h1: {\n    ...BaseIcon,\n    path: 'M19.59 5.081a.746.746 0 0 0-.809.084.751.751 0 0 0-.249.367c-.69 2.051-2.057 3.409-3.168 4.075a.75.75 0 0 0 .772 1.286c.774-.464 1.623-1.18 2.364-2.146v9.503a.75.75 0 0 0 1.5 0V5.772a.75.75 0 0 0-.41-.69ZM3.5 5.75a.75.75 0 0 0-1.5 0v12.5a.75.75 0 0 0 1.5 0V12.5H10v5.75a.75.75 0 0 0 1.5 0V5.75a.75.75 0 0 0-1.5 0V11H3.5V5.75Z',\n  },\n  h2: {\n    ...BaseIcon,\n    path: 'M4.5 5.75a.75.75 0 0 0-1.5 0v12.5a.75.75 0 0 0 1.5 0V12.5H11v5.75a.75.75 0 0 0 1.5 0V5.75a.75.75 0 0 0-1.5 0V11H4.5V5.75Zm10.921 2.085c.23-.46.913-1.335 2.58-1.335.842 0 1.459.26 1.86.639.397.376.64.921.64 1.611 0 1.963-1.3 3.068-2.958 4.343l-.212.163C15.825 14.409 14 15.806 14 18.25a.75.75 0 0 0 .75.75h6.5a.75.75 0 0 0 0-1.5h-5.66c.315-1.252 1.427-2.11 2.866-3.218C20.05 13.057 22 11.537 22 8.75c0-1.06-.383-2.015-1.11-2.702C20.166 5.364 19.158 5 18 5c-2.333 0-3.484 1.291-3.92 2.165a.75.75 0 0 0 1.341.67Z',\n  },\n  h3: {\n    ...BaseIcon,\n    path: 'M3.5 5.75a.75.75 0 0 0-1.5 0v12.5a.75.75 0 0 0 1.5 0V12.5H10v5.75a.75.75 0 0 0 1.5 0V5.75a.75.75 0 0 0-1.5 0V11H3.5V5.75Zm11.92 2.085c.23-.46.914-1.335 2.58-1.335.843 0 1.46.26 1.86.639.398.376.64.921.64 1.611 0 .606-.161 1.026-.384 1.332-.228.314-.555.554-.953.735-.816.37-1.802.433-2.383.433a.75.75 0 0 0 0 1.5c.581 0 1.567.063 2.383.433.398.18.725.42.953.735.223.306.384.726.384 1.332 0 1.086-.914 2.25-2.5 2.25-1.727 0-2.348-.76-2.553-1.276a.75.75 0 1 0-1.394.552C14.508 17.926 15.727 19 18 19c2.414 0 4-1.836 4-3.75 0-.894-.245-1.63-.67-2.214A3.679 3.679 0 0 0 20.144 12a3.679 3.679 0 0 0 1.186-1.036c.425-.584.67-1.32.67-2.214 0-1.06-.383-2.015-1.11-2.702C20.165 5.364 19.157 5 18 5c-2.334 0-3.484 1.291-3.92 2.165a.75.75 0 1 0 1.34.67Z',\n  },\n  image: {\n    ...BaseIcon,\n    path: 'M18.75 4A3.25 3.25 0 0 1 22 7.25v11.5A3.25 3.25 0 0 1 18.75 22H7.25A3.25 3.25 0 0 1 4 18.75v-6.248c.474.198.977.34 1.5.422v5.826c0 .208.036.408.103.594l5.823-5.701a2.25 2.25 0 0 1 3.02-.116l.128.116l5.822 5.702c.067-.186.104-.386.104-.595V7.25a1.75 1.75 0 0 0-1.75-1.75h-5.826a6.457 6.457 0 0 0-.422-1.5h6.248Zm-6.191 10.644l-.084.07l-5.807 5.687c.182.064.378.099.582.099h11.5c.203 0 .399-.035.58-.099l-5.805-5.686a.75.75 0 0 0-.966-.071ZM16.252 7.5a2.252 2.252 0 1 1 0 4.504a2.252 2.252 0 0 1 0-4.504ZM6.5 1a5.5 5.5 0 1 1 0 11a5.5 5.5 0 0 1 0-11Zm9.752 8a.752.752 0 1 0 0 1.504a.752.752 0 0 0 0-1.504ZM6.5 3l-.09.007a.5.5 0 0 0-.402.402L6 3.5V6H3.498l-.09.008a.5.5 0 0 0-.402.402l-.008.09l.008.09a.5.5 0 0 0 .402.402l.09.008H6v2.503l.008.09a.5.5 0 0 0 .402.402l.09.009l.09-.009a.5.5 0 0 0 .402-.402L7 9.503V7h2.505l.09-.008a.5.5 0 0 0 .402-.402l.008-.09l-.008-.09a.5.5 0 0 0-.403-.402L9.504 6H7V3.5l-.008-.09a.5.5 0 0 0-.402-.403L6.5 3Z',\n  },\n};\n\nexport default icons;\n","import { wrapInList } from \"prosemirror-schema-list\";\nimport { toggleMark } from \"prosemirror-commands\";\nimport { MenuItem } from \"prosemirror-menu\";\nimport { undo, redo } from \"prosemirror-history\";\nimport { openPrompt } from \"../prompt\";\nimport { TextField } from \"../TextField\";\nimport {\n  blockTypeIsActive,\n  cmdItem,\n  markItem,\n  toggleBlockType,\n} from \"./common\";\nimport icons from \"../icons\";\nimport { markActive } from \"../utils\";\n\nconst wrapListItem = (nodeType, options) =>\n  cmdItem(wrapInList(nodeType, options.attrs), options);\n\nconst imageUploadItem = (nodeType, onImageUpload) =>\n  new MenuItem({\n    title: \"Upload image\",\n    icon: icons.image,\n    enable() {\n      return true;\n    },\n    run() {\n      onImageUpload();\n      return true;\n    },\n  });\n\nconst headerItem = (nodeType, options) => {\n  const { level = 1 } = options;\n  return new MenuItem({\n    title: `Heading ${level}`,\n    icon: options.icon,\n    active(state) {\n      return blockTypeIsActive(state, nodeType, { level });\n    },\n    enable() {\n      return true;\n    },\n    run(state, dispatch, view) {\n      if (blockTypeIsActive(state, nodeType, { level })) {\n        toggleBlockType(nodeType, { level })(state, dispatch);\n        return true;\n      }\n\n      toggleBlockType(nodeType, { level })(view.state, view.dispatch);\n      view.focus();\n\n      return false;\n    },\n  });\n};\n\nconst linkItem = (markType) =>\n  new MenuItem({\n    title: \"Add or remove link\",\n    icon: icons.link,\n    active(state) {\n      return markActive(state, markType);\n    },\n    enable(state) {\n      return !state.selection.empty;\n    },\n    run(state, dispatch, view) {\n      if (markActive(state, markType)) {\n        toggleMark(markType)(state, dispatch);\n        return true;\n      }\n      openPrompt({\n        title: \"Create a link\",\n        fields: {\n          href: new TextField({\n            label: \"https://example.com\",\n            class: \"small\",\n            required: true,\n          }),\n        },\n        callback(attrs) {\n          toggleMark(markType, attrs)(view.state, view.dispatch);\n          view.focus();\n        },\n      });\n      return false;\n    },\n  });\n\nconst buildMenuOptions = (\n  schema,\n  {\n    enabledMenuOptions = [\n      \"strong\",\n      \"em\",\n      \"code\",\n      \"link\",\n      \"undo\",\n      \"redo\",\n      \"bulletList\",\n      \"orderedList\",\n    ],\n    onImageUpload = () => {},\n  }\n) => {\n  const availableMenuOptions = {\n    strong: markItem(schema.marks.strong, {\n      title: \"Toggle strong style\",\n      icon: icons.strong,\n    }),\n    em: markItem(schema.marks.em, {\n      title: \"Toggle emphasis\",\n      icon: icons.em,\n    }),\n    code: markItem(schema.marks.code, {\n      title: \"Toggle code font\",\n      icon: icons.code,\n    }),\n    link: linkItem(schema.marks.link),\n    bulletList: wrapListItem(schema.nodes.bullet_list, {\n      title: \"Wrap in bullet list\",\n      icon: icons.bulletList,\n    }),\n    orderedList: wrapListItem(schema.nodes.ordered_list, {\n      title: \"Wrap in ordered list\",\n      icon: icons.orderedList,\n    }),\n    undo: new MenuItem({\n      title: \"Undo last change\",\n      run: undo,\n      enable: (state) => undo(state),\n      icon: icons.undo,\n    }),\n    redo: new MenuItem({\n      title: \"Redo last undone change\",\n      run: redo,\n      enable: (state) => redo(state),\n      icon: icons.redo,\n    }),\n    h1: headerItem(schema.nodes.heading, {\n      level: 1,\n      title: \"Toggle code font\",\n      icon: icons.h1,\n    }),\n    h2: headerItem(schema.nodes.heading, {\n      level: 2,\n      title: \"Toggle code font\",\n      icon: icons.h2,\n    }),\n    h3: headerItem(schema.nodes.heading, {\n      level: 3,\n      title: \"Toggle code font\",\n      icon: icons.h3,\n    }),\n    imageUpload: imageUploadItem(schema.nodes.image, onImageUpload),\n  };\n\n  return [\n    enabledMenuOptions\n      .filter((menuOptionKey) => !!availableMenuOptions[menuOptionKey])\n      .map((menuOptionKey) => availableMenuOptions[menuOptionKey]),\n  ];\n};\n\nexport default buildMenuOptions;\n","export function filterMdToPmSchemaMapping(schema, map) {\n  return Object.keys(map).reduce((newMap, key) => {\n    const value = map[key];\n    const block = value.block || value.node;\n    const mark = value.mark;\n\n    if ((block && schema.nodes[block]) || (mark && schema.marks[mark])) {\n      newMap[key] = value;\n    }\n    return newMap;\n  }, {});\n}\n\nexport const baseSchemaToMdMapping = {\n  nodes: {\n    blockquote: 'blockquote',\n    paragraph: 'paragraph',\n    code_block: ['code', 'fence'],\n    list_item: 'list',\n  },\n  marks: {\n    em: 'emphasis',\n    superscript: 'sup',\n    strong: 'text',\n    link: ['link', 'autolink', 'reference', 'linkify'],\n    strike: 'strikethrough',\n    code: 'backticks',\n  },\n};\n\nexport const baseNodesMdToPmMapping = {\n  blockquote: { block: 'blockquote' },\n  paragraph: { block: 'paragraph' },\n  softbreak: { node: 'hard_break' },\n  hardbreak: { node: 'hard_break' },\n  code_block: { block: 'code_block' },\n  fence: {\n    block: 'code_block',\n    // we trim any whitespaces around language definition\n    attrs: tok => ({ language: (tok.info && tok.info.trim()) || null }),\n  },\n  list_item: { block: 'list_item' },\n  bullet_list: { block: 'bullet_list' },\n  ordered_list: {\n    block: 'ordered_list',\n    attrs: tok => ({ order: +tok.attrGet('order') || 1 }),\n  },\n  image: {\n    node: 'image',\n    getAttrs: (tok) => {\n      const src = tok.attrGet('src');\n      const heightMatch = src.match(/cw_image_height=(\\d+)px/);\n      return {\n        src,\n        title: tok.attrGet('title') || null,\n        alt: (tok.children[0] && tok.children[0].content) || null,\n        height: heightMatch ? `${heightMatch[1]}px` : null\n      };\n    },\n  },\n};\n\nexport const baseMarksMdToPmMapping = {\n  em: { mark: 'em' },\n  sup: { mark: 'superscript' },\n  strong: { mark: 'strong' },\n  link: {\n    mark: 'link',\n    attrs: tok => ({\n      href: tok.attrGet('href'),\n      title: tok.attrGet('title') || null,\n    }),\n  },\n  code_inline: { mark: 'code' },\n  s: { mark: 'strike' },\n};\n","import MarkdownIt from 'markdown-it';\nimport { MarkdownParser } from 'prosemirror-markdown';\nimport {\n  baseSchemaToMdMapping,\n  baseNodesMdToPmMapping,\n  baseMarksMdToPmMapping,\n  filterMdToPmSchemaMapping,\n} from './parser';\n\nexport const messageSchemaToMdMapping = {\n  nodes: { ...baseSchemaToMdMapping.nodes },\n  marks: { ...baseSchemaToMdMapping.marks },\n};\n\nexport const messageMdToPmMapping = {\n  ...baseNodesMdToPmMapping,\n  ...baseMarksMdToPmMapping,\n  mention: {\n    node: 'mention',\n    getAttrs: ({ mention }) => {\n      const { userId, userFullName } = mention;\n      return { userId, userFullName };\n    },\n  },\n  teamMention: {\n    node: 'team_mention',\n    getAttrs: ({ teamMention }) => {\n      const { teamId, teamName } = teamMention;\n      return { teamId, teamName };\n    },\n  },\n};\n\nconst md = MarkdownIt('commonmark', {\n  html: false,\n  linkify: false,\n});\n\nmd.enable([\n  // Process html entity - &#123;, &#xAF;, &quot;, ...\n  'entity',\n  // Process escaped chars and hardbreaks\n  'escape',\n]);\n\nmd.disable(['table', 'hr', 'heading', 'lheading'], true);\n\nexport class MessageMarkdownTransformer {\n  constructor(schema, tokenizer = md) {\n    // Enable markdown plugins based on schema\n    ['nodes', 'marks'].forEach(key => {\n      for (const idx in messageSchemaToMdMapping[key]) {\n        if (schema[key][idx]) {\n          tokenizer.enable(messageSchemaToMdMapping[key][idx]);\n        }\n      }\n    });\n\n    this.markdownParser = new MarkdownParser(\n      schema,\n      tokenizer,\n      filterMdToPmSchemaMapping(schema, messageMdToPmMapping)\n    );\n  }\n  encode(_node) {\n    throw new Error('This is not implemented yet');\n  }\n\n  parse(content) {\n    return this.markdownParser.parse(content);\n  }\n}\n","import MarkdownIt from 'markdown-it';\nimport MarkdownItSup from 'markdown-it-sup';\nimport { MarkdownParser } from 'prosemirror-markdown';\nimport {\n  baseSchemaToMdMapping,\n  baseNodesMdToPmMapping,\n  baseMarksMdToPmMapping,\n  filterMdToPmSchemaMapping,\n} from './parser';\n\nexport const articleSchemaToMdMapping = {\n  nodes: {\n    ...baseSchemaToMdMapping.nodes,\n    rule: 'hr',\n    heading: ['heading'],\n    image: 'image',\n  },\n  marks: { ...baseSchemaToMdMapping.marks },\n};\n\nexport const articleMdToPmMapping = {\n  ...baseNodesMdToPmMapping,\n  ...baseMarksMdToPmMapping,\n  hr: { node: 'horizontal_rule' },\n  heading: {\n    block: 'heading',\n    attrs: tok => ({ level: +tok.tag.slice(1) }),\n  },\n  mention: {\n    node: 'mention',\n    getAttrs: ({ mention }) => {\n      const { userId, userFullName } = mention;\n      return { userId, userFullName };\n    },\n  },\n  teamMention: {\n    node: 'team_mention',\n    getAttrs: ({ teamMention }) => {\n      const { teamId, teamName } = teamMention;\n      return { teamId, teamName };\n    },\n  },\n};\n\nconst md = MarkdownIt('commonmark', {\n  html: false,\n  linkify: true,\n  breaks: true,\n}).use(MarkdownItSup);\n\nmd.enable([\n  // Process html entity - &#123;, &#xAF;, &quot;, ...\n  'entity',\n  // Process escaped chars and hardbreaks\n  'escape',\n  'hr',\n]);\n\nexport class ArticleMarkdownTransformer {\n  constructor(schema, tokenizer = md) {\n    // Enable markdown plugins based on schema\n    ['nodes', 'marks'].forEach(key => {\n      for (const idx in articleSchemaToMdMapping[key]) {\n        if (schema[key][idx]) {\n          tokenizer.enable(articleSchemaToMdMapping[key][idx]);\n        }\n      }\n    });\n\n    this.markdownParser = new MarkdownParser(\n      schema,\n      tokenizer,\n      filterMdToPmSchemaMapping(schema, articleMdToPmMapping)\n    );\n  }\n  encode(_node) {\n    throw new Error('This is not implemented yet');\n  }\n\n  parse(content) {\n    return this.markdownParser.parse(content);\n  }\n}\n","export const mention = (state, node) => {\n  const uri = state.esc(\n    `mention://user/${node.attrs.userId}/${encodeURIComponent(\n      node.attrs.userFullName\n    )}`\n  );\n  const escapedDisplayName = state.esc('@' + (node.attrs.userFullName || ''));\n\n  state.write(`[${escapedDisplayName}](${uri})`);\n};\n\nexport const team_mention = (state, node) => {\n  const uri = state.esc(\n    `team_mention://team/${node.attrs.teamId}/${encodeURIComponent(\n      node.attrs.teamName\n    )}`\n  );\n  const escapedDisplayName = state.esc('#' + (node.attrs.teamName || ''));\n\n  state.write(`[${escapedDisplayName}](${uri})`);\n};\n\nexport const blockquote = (state, node) => {\n  state.wrapBlock('> ', null, node, () => state.renderContent(node));\n};\nexport const code_block = (state, node) => {\n  state.write('```' + (node.attrs.params || '') + '\\n');\n  state.text(node.textContent, false);\n  state.ensureNewLine();\n  state.write('```');\n  state.closeBlock(node);\n};\nexport const heading = (state, node) => {\n  state.write(state.repeat('#', node.attrs.level) + ' ');\n  state.renderInline(node);\n  state.closeBlock(node);\n};\nexport const horizontal_rule = (state, node) => {\n  state.write(node.attrs.markup || '---');\n  state.closeBlock(node);\n};\nexport const bullet_list = (state, node) => {\n  state.renderList(node, '  ', () => (node.attrs.bullet || '*') + ' ');\n};\nexport const ordered_list = (state, node) => {\n  let start = node.attrs.order || 1;\n  let maxW = String(start + node.childCount - 1).length;\n  let space = state.repeat(' ', maxW + 2);\n  state.renderList(node, space, i => {\n    let nStr = String(start + i);\n    return state.repeat(' ', maxW - nStr.length) + nStr + '. ';\n  });\n};\nexport const list_item = (state, node) => {\n  state.renderContent(node);\n};\nexport const paragraph = (state, node) => {\n  state.renderInline(node);\n  state.closeBlock(node);\n};\nexport const image = (state, node) => {\n  let src = state.esc(node.attrs.src);\n  if (node.attrs.height) {\n    const param = `cw_image_height=${node.attrs.height}`;\n    if (src.includes('?')) {\n      src = src.includes('cw_image_height=') ?\n        src.replace(/cw_image_height=[^&]+/, param) : `${src}&${param}`;\n    } else {\n      src += `?${param}`;\n    }\n  }\n  state.write(\n    '![' +\n      state.esc(node.attrs.alt || '') +\n      '](' +\n      src +\n      (node.attrs.title ? ' ' + state.quote(node.attrs.title) : '') +\n      ')'\n  );\n};\nexport const hard_break = (state, node, parent, index) => {\n  for (let i = index + 1; i < parent.childCount; i++)\n    if (parent.child(i).type !== node.type) {\n      state.write('  \\n');\n      return;\n    }\n};\nexport const text = (state, node) => {\n  state.text(node.text, false);\n};\n\nexport const em = {\n  open: '*',\n  close: '*',\n  mixable: true,\n  expelEnclosingWhitespace: true,\n};\nexport const superscript = {\n  open: '^',\n  close: '^',\n  mixable: false,\n  escape: false,\n  expelEnclosingWhitespace: false,\n};\nexport const strike = {\n  open: '~~',\n  close: '~~',\n  mixable: true,\n  expelEnclosingWhitespace: true,\n};\nexport const strong = {\n  open: '**',\n  close: '**',\n  mixable: true,\n  expelEnclosingWhitespace: true,\n};\nexport const link = {\n  open(_state, mark, parent, index) {\n    return isPlainURL(mark, parent, index, 1) ? '<' : '[';\n  },\n  close(state, mark, parent, index) {\n    return isPlainURL(mark, parent, index, -1)\n      ? '>'\n      : '](' +\n          state.esc(mark.attrs.href) +\n          (mark.attrs.title ? ' ' + state.quote(mark.attrs.title) : '') +\n          ')';\n  },\n  escape: false,\n};\nexport const code = {\n  open(_state, _mark, parent, index) {\n    return backticksFor(parent.child(index), -1);\n  },\n  close(_state, _mark, parent, index) {\n    return backticksFor(parent.child(index - 1), 1);\n  },\n  escape: false,\n};\n\nfunction backticksFor(node, side) {\n  let ticks = /`+/g,\n    m,\n    len = 0;\n  if (node.isText)\n    while ((m = ticks.exec(node.text))) len = Math.max(len, m[0].length);\n  let result = len > 0 && side > 0 ? ' `' : '`';\n  for (let i = 0; i < len; i++) result += '`';\n  if (len > 0 && side < 0) result += ' ';\n  return result;\n}\n\nfunction isPlainURL(link, parent, index, side) {\n  if (link.attrs.title || !/^\\w+:/.test(link.attrs.href)) return false;\n  let content = parent.child(index + (side < 0 ? -1 : 0));\n  if (\n    !content.isText ||\n    content.text != link.attrs.href ||\n    content.marks[content.marks.length - 1] != link\n  )\n    return false;\n  if (index == (side < 0 ? 1 : parent.childCount - 1)) return true;\n  let next = parent.child(index + (side < 0 ? -2 : 1));\n  return !link.isInSet(next.marks);\n}\n","import { MarkdownSerializer as MarkdownSerializerBase } from 'prosemirror-markdown';\n\nimport {\n  blockquote,\n  code_block,\n  heading,\n  horizontal_rule,\n  bullet_list,\n  ordered_list,\n  list_item,\n  paragraph,\n  image,\n  hard_break,\n  text,\n  em,\n  superscript,\n  strike,\n  strong,\n  link,\n  code,\n} from './serializer';\n\nexport const ArticleMarkdownSerializer = new MarkdownSerializerBase(\n  {\n    blockquote,\n    code_block,\n    heading,\n    horizontal_rule,\n    bullet_list,\n    ordered_list,\n    list_item,\n    paragraph,\n    image,\n    hard_break,\n    text,\n  },\n  {\n    em,\n    superscript,\n    strike,\n    strong,\n    link,\n    code,\n  }\n);\n","import { MarkdownSerializer as MarkdownSerializerBase } from 'prosemirror-markdown';\n\nimport {\n  mention,\n  team_mention,\n  blockquote,\n  code_block,\n  bullet_list,\n  ordered_list,\n  list_item,\n  paragraph,\n  image,\n  hard_break,\n  text,\n  em,\n  strike,\n  strong,\n  link,\n  code,\n} from './serializer';\n\nexport const MessageMarkdownSerializer = new MarkdownSerializerBase(\n  {\n    mention,\n    team_mention,\n    blockquote,\n    code_block,\n    bullet_list,\n    ordered_list,\n    list_item,\n    paragraph,\n    image,\n    hard_break,\n    text,\n  },\n  {\n    em,\n    strike,\n    strong,\n    link,\n    code,\n  }\n);\n","import { orderedList, bulletList, listItem } from 'prosemirror-schema-list';\nimport { Schema } from 'prosemirror-model';\nimport { schema } from 'prosemirror-markdown';\n\nexport const fullSchema = new Schema({\n  nodes: {\n    doc: schema.spec.nodes.get('doc'),\n    paragraph: schema.spec.nodes.get('paragraph'),\n    blockquote: schema.spec.nodes.get('blockquote'),\n    horizontal_rule: schema.spec.nodes.get('horizontal_rule'),\n    heading: schema.spec.nodes.get('heading'),\n    code_block: schema.spec.nodes.get('code_block'),\n    text: schema.spec.nodes.get('text'),\n    image: schema.spec.nodes.get('image'),\n    hard_break: schema.spec.nodes.get('hard_break'),\n    ordered_list: Object.assign(orderedList, {\n      content: 'list_item+',\n      group: 'block',\n    }),\n    bullet_list: Object.assign(bulletList, {\n      content: 'list_item+',\n      group: 'block',\n    }),\n    list_item: Object.assign(listItem, { content: 'paragraph block*' }),\n  },\n  marks: {\n    link: schema.spec.marks.get('link'),\n    em: schema.spec.marks.get('em'),\n    superscript: {\n      parseDOM: [{ tag: 'sup' }],\n      toDOM() {\n        return ['sup'];\n      },\n    },\n    strong: schema.spec.marks.get('strong'),\n    code: schema.spec.marks.get('code'),\n    strike: {\n      parseDOM: [\n        { tag: 's' },\n        { tag: 'del' },\n        { tag: 'strike' },\n        {\n          style: 'text-decoration',\n          getAttrs: value => value === 'line-through',\n        },\n      ],\n      toDOM: () => ['s', 0],\n    },\n  },\n});\n\nexport default fullSchema;\n","import { orderedList, bulletList, listItem } from 'prosemirror-schema-list';\nimport { schema } from 'prosemirror-markdown';\n\nimport { Schema } from 'prosemirror-model';\n\nexport const messageSchema = new Schema({\n  nodes: {\n    doc: schema.spec.nodes.get('doc'),\n    paragraph: schema.spec.nodes.get('paragraph'),\n    blockquote: schema.spec.nodes.get('blockquote'),\n    code_block: schema.spec.nodes.get('code_block'),\n    text: schema.spec.nodes.get('text'),\n    hard_break: schema.spec.nodes.get('hard_break'),\n    image: {\n      ...schema.spec.nodes.get('image'),\n      attrs: {\n        ...schema.spec.nodes.get('image').attrs,\n        height: {default: null}\n      },\n      parseDOM: [{\n        tag: 'img[src]',\n        getAttrs: dom => ({\n          src: dom.getAttribute('src'),\n          title: dom.getAttribute('title'),\n          alt: dom.getAttribute('alt'),\n          height: parseInt(dom.style.height)\n        })\n      }],\n      toDOM: node => {\n        const attrs = {\n          src: node.attrs.src,\n          alt: node.attrs.alt,\n          height: node.attrs.height\n        };\n        if (node.attrs.height) {\n          attrs.style = `height: ${node.attrs.height}`;\n        }\n        return [\"img\", attrs];\n      }\n    },\n    ordered_list: Object.assign(orderedList, {\n      content: 'list_item+',\n      group: 'block',\n    }),\n    bullet_list: Object.assign(bulletList, {\n      content: 'list_item+',\n      group: 'block',\n    }),\n    list_item: Object.assign(listItem, { content: 'paragraph block*' }),\n    mention: {\n      attrs: { userFullName: { default: '' }, userId: { default: '' } },\n      group: 'inline',\n      inline: true,\n      selectable: true,\n      draggable: true,\n      atom: true,\n      toDOM: node => [\n        'span',\n        {\n          class: 'prosemirror-mention-node',\n          'mention-user-id': node.attrs.userId,\n          'mention-user-full-name': node.attrs.userFullName,\n        },\n        `@${node.attrs.userFullName}`,\n      ],\n      parseDOM: [\n        {\n          tag: 'span[mention-user-id][mention-user-full-name]',\n          getAttrs: dom => {\n            const userId = dom.getAttribute('mention-user-id');\n            const userFullName = dom.getAttribute('mention-user-full-name');\n            return { userId, userFullName };\n          },\n        },\n      ],\n    },\n    team_mention: {\n      attrs: { teamName: { default: '' }, teamId: { default: '' } },\n      group: 'inline',\n      inline: true,\n      selectable: true,\n      draggable: true,\n      atom: true,\n      toDOM: node => [\n        'span',\n        {\n          class: 'prosemirror-team-mention-node',\n          'mention-team-id': node.attrs.teamId,\n          'mention-team-name': node.attrs.teamName,\n        },\n        `@${node.attrs.teamName}`,\n      ],\n      parseDOM: [\n        {\n          tag: 'span[mention-team-id][mention-team-name]',\n          getAttrs: dom => {\n            const teamId = dom.getAttribute('mention-team-id');\n            const teamName = dom.getAttribute('mention-team-name');\n            return { teamId, teamName };\n          },\n        },\n      ],\n    },\n  },\n  marks: {\n    link: schema.spec.marks.get('link'),\n    em: schema.spec.marks.get('em'),\n    strong: schema.spec.marks.get('strong'),\n    code: schema.spec.marks.get('code'),\n    strike: {\n      parseDOM: [\n        { tag: 's' },\n        { tag: 'del' },\n        { tag: 'strike' },\n        {\n          style: 'text-decoration',\n          getAttrs: value => value === 'line-through',\n        },\n      ],\n      toDOM: () => ['s', 0],\n    },\n  },\n});\n","import { history } from \"prosemirror-history\";\nimport { Plugin } from \"prosemirror-state\";\nimport { dropCursor } from \"prosemirror-dropcursor\";\nimport { gapCursor } from \"prosemirror-gapcursor\";\nimport { menuBar } from \"prosemirror-menu\";\n\nimport Placeholder from \"./Placeholder\";\nimport {\n  listInputRules,\n  linksInputRules,\n  hrInputRules,\n  blocksInputRule,\n  baseKeyMaps,\n  textFormattingInputRules,\n} from \"./rules/index\";\nimport buildMenuOptions from \"./menu/menuOptions\";\n\nexport { EditorState, Selection } from \"prosemirror-state\";\nexport { EditorView } from \"prosemirror-view\";\n\nexport { MessageMarkdownTransformer } from \"./schema/markdown/messageParser\";\nexport { ArticleMarkdownTransformer } from \"./schema/markdown/articleParser\";\n\nexport { ArticleMarkdownSerializer } from \"./schema/markdown/articleSerializer\";\nexport { MessageMarkdownSerializer } from \"./schema/markdown/messageSerializer\";\n\nexport { fullSchema } from \"./schema/article\";\nexport { messageSchema } from \"./schema/message\";\n\nexport const buildEditor = ({\n  schema,\n  placeholder,\n  methods: { onImageUpload } = {},\n  plugins = [],\n  enabledMenuOptions,\n}) => [\n  ...(plugins || []),\n  history(),\n  baseKeyMaps(schema),\n  blocksInputRule(schema),\n  textFormattingInputRules(schema),\n  linksInputRules(schema),\n  hrInputRules(schema),\n  listInputRules(schema),\n  dropCursor(),\n  gapCursor(),\n  Placeholder(placeholder),\n  menuBar({\n    floating: true,\n    content: buildMenuOptions(schema, {\n      enabledMenuOptions,\n      onImageUpload,\n    }),\n  }),\n  new Plugin({\n    props: {\n      attributes: { class: \"ProseMirror-woot-style\" },\n    },\n  }),\n];\n"],"names":["placeholderText","Plugin","props","decorations","state","decorate","node","pos","doc","content","size","push","Decoration","nodeSize","class","descendants","DecorationSet","create","markActive","mark","from","to","empty","selection","isInSet","tr","storedMarks","$from","marks","found","nodesBetween","hasCode","code","schema","nodeAt","filter","type","length","hasUnsupportedMarkForBlockInputRule","start","end","unsupportedMarksPresent","isUnsupportedMark","link","hasUnsupportedMarkForInputRule","isCodemark","defaultInputRuleHandler","inputRule","isBlockNodeRule","originalHandler","handler","match","unsupportedMarks","parent","spec","createInputRule","InputRule","leafNodeReplacementCharacter","hasVisibleContent","isInlineNodeHasVisibleContent","inlineNode","isText","textContent","trim","name","isInline","isBlock","isLeaf","isAtom","childCount","index","child","isEmptyParagraph","isNodeEmpty","firstChild","block","nonBlock","forEach","childNode","compose","functions","args","reduceRight","arg","fn","getFragmentBackingArray","fragment","mapFragment","callback","children","i","transformed","copy","Array","isArray","Fragment","fromArray","mapSlice","slice","Slice","openStart","openEnd","atTheEndOfDoc","$to","depth","canMoveDown","TextSelection","atTheBeginningOfDoc","canMoveUp","maxIndentation","regexp","nodeType","wrappingInputRule","_","insertList","listType","listTypeName","hardBreak","nodes","resolve","nodeAfter","delete","split","currentNode","list_item","position","range","blockRange","wrap","getBulletListInputRules","asteriskRule","leafNodeAsteriskRule","defaultCreateInputRule","RegExp","_match","getOrderedListInputRules","numberOneRule","leafNodeNumberOneRule","listInputRules","rules","inputRules","isInsideListItem","paragraph","hasParentNodeOfType","numberNestedLists","resolvedPos","bullet_list","ordered_list","count","mergeLists","listItem","command","dispatch","$start","$end","$join","mapping","map","nodeBefore","join","scrollIntoView","outdentList","baseListCommand","liftListItem","splitListItem","itemType","ref","sameParent","grandParent","keepItem","d","append","createAndFill","tr$1","replace","before","undefined","after","setSelection","constructor","near","nextType","contentMatchAt","defaultType","types","enterKeyOnListCommand","wrapper","wrapperHasContent","canSink","initialIndentationLevel","currentIndentationLevel","currentPos","indentList","sinkListItem","linkify","LinkifyIt","fuzzyLink","add","tlds","tlds2Char","createLinkInputRule","rangeHasMark","url","normalizeUrl","markType","href","addMark","input","lastIndex","insertText","LinkMatcher","exec","str","endsWith","chunks","lastChunk","links","lastLink","whitelistedURLPatterns","isSafeUrl","some","p","test","getLinkMatch","linksInputRules","urlWithASpaceRule","markdownLinkRule","prefix","linkText","linkUrl","replaceWith","text","applyMarkOnRange","removeMark","nodeBetweenFrom","Math","max","nodeBetweenTo","min","moveRight","$cursor","insideCode","currentPosHasCode","nextPosHasCode","exitingCode","enteringCode","addStoredMark","removeStoredMark","moveLeft","nextNextPosHasCode","atLeftEdge","atRightEdge","Selection","isFirstChild","insertBlock","nodeName","attrs","hard_break","code_block","codeBlock","$pos","nodeHasMoreContent","blockquote","newNode","NodeSelection","replaceSelectionWith","transformToCodeBlockAction","startOfCodeBlockText","parentPos","codeBlockSlice","replaceRange","parentOffset","codeBlockMarks","setNodeMarkup","isConvertableToCodeBlock","isTextblock","parentDepth","parentNode","canReplaceWith","cleanUpAtTheStartOfDocument","canCreateParagraphNear","insideCodeBlock","isNodeSelection","createNewParagraphBelow","createParagraphNear","createNewParagraphAbove","topLevelNodeIsEmptyTextBlock","topLevelNode","getInsertPosFromTextBlock","getInsertPosFromNonTextBlock","insertPos","insert","MAX_HEADING_LEVEL","getHeadingLevel","level","headingRule","maxLevel","textblockTypeInputRule","blockQuoteRule","getHeadingRules","hashRule","heading","leftNodeReplacementHashRule","getBlockQuoteRules","greatherThanRule","leftNodeReplacementGreatherRule","getCodeBlockRules","threeTildeRule","attributes","language","newStart","createChecked","safeInsert","leftNodeReplacementThreeTildeRule","blocksInputRule","createHorizontalRuleInputRule","hrPos","hrInputRules","horizontal_rule","hrRule","mac","navigator","platform","baseKeyMaps","keys","baseKeymap","bind","key","cmd","chainCommands","undoInputRule","undo","redo","backspaceComands","deleteSelection","joinBackward","selectNodeBackward","joinUp","joinDown","selectParentNode","strong","toggleMark","em","superscript","br","exitCode","modEnter","enterCommands","newlineInCode","liftEmptyBlock","splitBlock","unshift","apply","keymap","validCombos","__","validRegex","char","ch","matchLength","substr","charSize","textWithCombo","containsHardBreak","allowsMarkType","addCodeMark","specialChar","allowedPrefixConditions","every","condition","regexStart","codeMark","setStoredMarks","strongRegex1","strongRegex2","italicRegex1","italicRegex2","strikeRegex","codeRegex","supertextRegex","getStrongInputRules","markLength","doubleUnderscoreRule","doubleAsterixRule","getItalicInputRules","underscoreRule","asterixRule","getStrikeInputRules","doubleTildeRule","strike","getSuperscriptInputRules","getCodeInputRules","backTickRule","textFormattingInputRules","reportInvalid","dom","message","msg","appendChild","document","createElement","style","left","offsetLeft","offsetWidth","top","offsetTop","className","setTimeout","removeChild","getValues","fields","domFields","result","Object","field","value","read","bad","validate","reduce","acc","clean","openPrompt","options","body","close","window","removeEventListener","mouseOutside","e","contains","target","addEventListener","values","render","submitButton","cancelButton","form","title","titleDom","buttons","createTextNode","box","getBoundingClientRect","innerHeight","height","innerWidth","width","submit","params","preventDefault","ctrlKey","metaKey","shiftKey","activeElement","elements","focus","Field","validateType","required","TextField","placeholder","label","autocomplete","cmdItem","passedOptions","run","optionKey","enable","select","MenuItem","markItem","active","blockTypeIsActive","wrapperDepth","currentDepth","currentNodeAtDepth","comparisonAttrs","isType","hasAttrs","prev","curr","toggleBlockType","isActive","newNodeType","setBlockFunction","setBlockType","BaseIcon","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","path","icons","superScript","bulletList","orderedList","h1","h2","h3","image","wrapListItem","wrapInList","imageUploadItem","onImageUpload","icon","headerItem","view","linkItem","buildMenuOptions","enabledMenuOptions","availableMenuOptions","imageUpload","menuOptionKey","filterMdToPmSchemaMapping","newMap","baseSchemaToMdMapping","baseNodesMdToPmMapping","softbreak","hardbreak","fence","tok","info","order","attrGet","getAttrs","src","heightMatch","alt","baseMarksMdToPmMapping","sup","code_inline","s","messageSchemaToMdMapping","messageMdToPmMapping","mention","userId","userFullName","teamMention","teamId","teamName","md","MarkdownIt","html","disable","MessageMarkdownTransformer","tokenizer","idx","markdownParser","MarkdownParser","encode","_node","Error","parse","articleSchemaToMdMapping","rule","articleMdToPmMapping","hr","tag","breaks","use","MarkdownItSup","ArticleMarkdownTransformer","uri","esc","encodeURIComponent","escapedDisplayName","write","team_mention","wrapBlock","renderContent","ensureNewLine","closeBlock","repeat","renderInline","markup","renderList","bullet","maxW","String","space","nStr","param","includes","quote","open","mixable","expelEnclosingWhitespace","escape","_state","isPlainURL","_mark","backticksFor","side","ticks","m","len","next","ArticleMarkdownSerializer","MarkdownSerializerBase","MessageMarkdownSerializer","fullSchema","Schema","get","assign","group","parseDOM","toDOM","messageSchema","default","getAttribute","parseInt","inline","selectable","draggable","atom","buildEditor","methods","plugins","history","dropCursor","gapCursor","Placeholder","menuBar","floating"],"mappings":"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"}